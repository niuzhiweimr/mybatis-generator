2018-01-23 13:50 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 13:50 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 13:50 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 13:50 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 13:50 INFO -com.mg.generator.ConfigLoader >>55
2018-01-23 13:50 INFO -com.mg.generator.ConfigLoader >>3
2018-01-23 13:50 DEBUG -com.mg.generator.ConfigLoader >>menu<<
2018-01-23 13:50 DEBUG -com.mg.generator.ConfigLoader >>book_editor<<
2018-01-23 13:50 DEBUG -com.mg.generator.ConfigLoader >>editor<<
2018-01-23 13:55 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 13:55 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 13:55 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 13:55 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 13:55 INFO -com.mg.generator.ConfigLoader >>55
2018-01-23 13:55 INFO -com.mg.generator.ConfigLoader >>3
2018-01-23 13:55 DEBUG -com.mg.generator.ConfigLoader >>menu<<
2018-01-23 13:55 DEBUG -com.mg.generator.ConfigLoader >>book_editor<<
2018-01-23 13:55 DEBUG -com.mg.generator.ConfigLoader >>editor<<
2018-01-23 18:47 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 18:47 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 18:47 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 18:47 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 18:47 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:47 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:56)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:47 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:47 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:56)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:47 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:47 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:56)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:48 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 18:48 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 18:48 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 18:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 18:48 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:48 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:56)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:54 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 18:54 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 18:54 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 18:54 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 18:54 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:54 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:56 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 18:56 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 18:56 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 18:56 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 18:56 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:57 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 18:58 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 18:58 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 18:58 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 18:58 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 18:59 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 18:59 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 19:01 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:01 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:01 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:01 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:02 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 19:02 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 19:07 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:07 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:07 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:07 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:07 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 19:07 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 19:07 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:07 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:07 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:07 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:07 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 19:07 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 19:09 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:09 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:09 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:09 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:09 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'root'@'localhost' (using password: YES)}
2018-01-23 19:09 ERROR -com.mg.generator.DBResource String index out of range: -1
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.AbstractStringBuilder.delete(AbstractStringBuilder.java:694)
	at java.lang.StringBuffer.delete(StringBuffer.java:369)
	at com.mg.generator.CodeBuilder.buildEntitySource(CodeBuilder.java:101)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:59)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:20)
2018-01-23 19:10 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:10 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:10 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:11 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:11 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:11 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:11 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:48 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:51 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:51 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:53 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:53 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:53 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:53 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:53 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:59 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 19:59 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 19:59 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 19:59 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:03 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:03 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:03 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:03 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:04 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:06 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:06 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:06 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:36 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:36 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:36 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:36 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:43 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:43 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:43 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:47 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:47 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:47 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 20:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 20:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 20:48 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:01 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:01 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:01 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:02 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:02 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:02 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:04 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:04 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:05 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:05 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:05 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:08 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=null, jdbcType=null, javaType=Integer], MappingFile [property=nick_name, column=null, jdbcType=null, javaType=String], MappingFile [property=user_name, column=null, jdbcType=null, javaType=String], MappingFile [property=pass_word, column=null, jdbcType=null, javaType=String], MappingFile [property=email, column=null, jdbcType=null, javaType=String], MappingFile [property=mobile_num, column=null, jdbcType=null, javaType=String], MappingFile [property=mobile_flag, column=null, jdbcType=null, javaType=String], MappingFile [property=user_type, column=null, jdbcType=null, javaType=String], MappingFile [property=reg_time, column=null, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=status, column=null, jdbcType=null, javaType=String], MappingFile [property=face, column=null, jdbcType=null, javaType=String], MappingFile [property=effect_from, column=null, jdbcType=null, javaType=java.sql.Date], MappingFile [property=effect_to, column=null, jdbcType=null, javaType=java.sql.Date], MappingFile [property=source_flag, column=null, jdbcType=null, javaType=String], MappingFile [property=create_time, column=null, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=org_id, column=null, jdbcType=null, javaType=Integer]]
2018-01-23 22:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:08 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:08 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=null, jdbcType=null, javaType=Integer], MappingFile [property=info_code, column=null, jdbcType=null, javaType=String], MappingFile [property=info_title, column=null, jdbcType=null, javaType=String], MappingFile [property=info_desc, column=null, jdbcType=null, javaType=String], MappingFile [property=info_catg_id, column=null, jdbcType=null, javaType=Integer], MappingFile [property=total_view_num, column=null, jdbcType=null, javaType=Integer], MappingFile [property=total_zan_num, column=null, jdbcType=null, javaType=Integer], MappingFile [property=total_focus_num, column=null, jdbcType=null, javaType=Integer], MappingFile [property=head_img_url, column=null, jdbcType=null, javaType=String], MappingFile [property=icon_img_url, column=null, jdbcType=null, javaType=String], MappingFile [property=flag, column=null, jdbcType=null, javaType=String], MappingFile [property=pub_id, column=null, jdbcType=null, javaType=Integer], MappingFile [property=dept_id, column=null, jdbcType=null, javaType=Integer], MappingFile [property=org_id, column=null, jdbcType=null, javaType=Integer], MappingFile [property=pub_time, column=null, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=info_type, column=null, jdbcType=null, javaType=String]]
2018-01-23 22:12 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:12 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=null, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=null, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=null, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=null, javaType=String], MappingFile [property=email, column=email, jdbcType=null, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=null, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=null, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=null, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=null, javaType=String], MappingFile [property=face, column=face, jdbcType=null, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=null, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=null, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=null, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer]]
2018-01-23 22:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:12 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:12 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=null, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=null, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=null, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=null, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=null, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=null, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=null, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=null, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=null, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=null, javaType=String], MappingFile [property=flag, column=flag, jdbcType=null, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=null, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=null, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=null, javaType=String]]
2018-01-23 22:18 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:18 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=null, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=null, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=null, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=null, javaType=String], MappingFile [property=email, column=email, jdbcType=null, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=null, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=null, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=null, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=null, javaType=String], MappingFile [property=face, column=face, jdbcType=null, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=null, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=null, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=null, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer]]
2018-01-23 22:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:18 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:18 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=null, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=null, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=null, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=null, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=null, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=null, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=null, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=null, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=null, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=null, javaType=String], MappingFile [property=flag, column=flag, jdbcType=null, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=null, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=null, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=null, javaType=String]]
2018-01-23 22:19 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:19 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=null, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=null, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=null, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=null, javaType=String], MappingFile [property=email, column=email, jdbcType=null, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=null, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=null, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=null, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=null, javaType=String], MappingFile [property=face, column=face, jdbcType=null, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=null, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=null, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=null, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer]]
2018-01-23 22:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:19 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:19 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=null, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=null, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=null, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=null, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=null, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=null, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=null, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=null, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=null, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=null, javaType=String], MappingFile [property=flag, column=flag, jdbcType=null, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=null, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=null, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=null, javaType=String]]
2018-01-23 22:20 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:20 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:20 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=null, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=null, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=null, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=null, javaType=String], MappingFile [property=email, column=email, jdbcType=null, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=null, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=null, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=null, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=null, javaType=String], MappingFile [property=face, column=face, jdbcType=null, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=null, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=null, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=null, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer]]
2018-01-23 22:20 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:20 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:20 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=null, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=null, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=null, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=null, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=null, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=null, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=null, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=null, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=null, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=null, javaType=String], MappingFile [property=flag, column=flag, jdbcType=null, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=null, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=null, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=null, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=null, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=null, javaType=String]]
2018-01-23 22:40 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:40 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_type' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.reg_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.reg_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.status' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.status' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.face' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.face' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_from' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_from' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_to' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_to' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.source_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.source_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.create_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.create_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer]]
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:40 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_code' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_code' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_title' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_title' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_desc' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_desc' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_catg_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_catg_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_view_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_view_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_zan_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_zan_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_focus_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_focus_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.head_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.head_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.icon_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.icon_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.flag' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.dept_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.dept_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_time' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:40 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_type' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:40 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=LONGVARCHAR, javaType=String]]
2018-01-23 22:42 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:42 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_type' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.reg_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.reg_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.status' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.status' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.face' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.face' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_from' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_from' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_to' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_to' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.source_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.source_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.create_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.create_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer]]
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:42 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_code' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_code' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_title' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_title' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_desc' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_desc' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_catg_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_catg_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_view_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_view_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_zan_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_zan_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_focus_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_focus_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.head_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.head_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.icon_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.icon_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.flag' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.dept_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.dept_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_time' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:42 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_type' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:42 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=LONGVARCHAR, javaType=String]]
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_type' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.reg_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.reg_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.status' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.status' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.face' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.face' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_from' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_from' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_to' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_to' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.source_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.source_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.create_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.create_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer]]
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_code' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_code' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_title' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_title' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_desc' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_desc' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_catg_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_catg_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_view_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_view_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_zan_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_zan_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_focus_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_focus_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.head_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.head_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.icon_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.icon_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.flag' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.dept_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.dept_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_time' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_type' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=LONGVARCHAR, javaType=String]]
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:44 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:44 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:45 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:45 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:45 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:191)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:46 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_type' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.reg_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.reg_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.status' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.status' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.face' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.face' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_from' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_from' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_to' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_to' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.source_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.source_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.create_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.create_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=LONGVARCHAR, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer]]
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:46 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_code' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_code' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_title' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_title' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_desc' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_desc' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_catg_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_catg_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_view_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_view_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_zan_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_zan_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_focus_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_focus_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.head_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.head_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.icon_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.icon_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.flag' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.dept_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.dept_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_time' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:46 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_type' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:46 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=LONGVARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=LONGVARCHAR, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=LONGVARCHAR, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=LONGVARCHAR, javaType=String]]
2018-01-23 22:48 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.uid' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.uid' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.nick_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.nick_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_name' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_name' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pass_word' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pass_word' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.email' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.email' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_num' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.mobile_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.mobile_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.user_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.user_type' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.reg_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.reg_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.status' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.status' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.face' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.face' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_from' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_from' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.effect_to' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.effect_to' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.source_flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.source_flag' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.create_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.create_time' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=, javaType=String], MappingFile [property=email, column=email, jdbcType=, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=, javaType=String], MappingFile [property=face, column=face, jdbcType=, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer]]
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:48 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_code' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_code' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_title' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_title' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_desc' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_desc' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_catg_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_catg_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_view_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_view_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_zan_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_zan_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.total_focus_num' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.total_focus_num' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.head_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.head_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.icon_img_url' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.icon_img_url' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.flag' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.flag' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.dept_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.dept_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.org_id' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.org_id' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.pub_time' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.pub_time' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:48 ERROR -com.mg.generator.ConfigLoader Table 'kjplus.info_type' doesn't exist
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'kjplus.info_type' doesn't exist
	at sun.reflect.GeneratedConstructorAccessor8.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2526)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484)
	at com.mysql.jdbc.StatementImpl.executeQuery(StatementImpl.java:1446)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3759)
	at com.mysql.jdbc.DatabaseMetaData$7.forEach(DatabaseMetaData.java:3749)
	at com.mysql.jdbc.IterateBlock.doForAll(IterateBlock.java:50)
	at com.mysql.jdbc.DatabaseMetaData.getPrimaryKeys(DatabaseMetaData.java:3747)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:189)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:48 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=, javaType=String], MappingFile [property=flag, column=flag, jdbcType=, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=, javaType=String]]
2018-01-23 22:50 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:50 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=, javaType=String], MappingFile [property=email, column=email, jdbcType=, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=, javaType=String], MappingFile [property=face, column=face, jdbcType=, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer]]
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'WHERE 1=1' at line 1
	at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:525)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:377)
	at com.mysql.jdbc.Util.getInstance(Util.java:360)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:978)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3887)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3823)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2530)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1907)
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:2030)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:196)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=, javaType=String], MappingFile [property=flag, column=flag, jdbcType=, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=, javaType=String]]
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=, javaType=String], MappingFile [property=email, column=email, jdbcType=, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=, javaType=String], MappingFile [property=face, column=face, jdbcType=, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer]]
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:51 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:51 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:200)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:51 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=, javaType=String], MappingFile [property=flag, column=flag, jdbcType=, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=, javaType=String]]
2018-01-23 22:52 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:52 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=, javaType=String], MappingFile [property=email, column=email, jdbcType=, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=, javaType=String], MappingFile [property=face, column=face, jdbcType=, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer]]
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:52 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:52 ERROR -com.mg.generator.ConfigLoader Column index out of range.
java.sql.SQLException: Column index out of range.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:996)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:924)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:870)
	at com.mysql.jdbc.ResultSetMetaData.getField(ResultSetMetaData.java:392)
	at com.mysql.jdbc.ResultSetMetaData.getColumnTypeName(ResultSetMetaData.java:281)
	at com.mg.generator.MetaMapping.DBFieldType(MetaMapping.java:199)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:179)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:71)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:18)
2018-01-23 22:52 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=, javaType=String], MappingFile [property=flag, column=flag, jdbcType=, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=, javaType=String]]
2018-01-23 22:53 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 22:53 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 22:53 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 22:53 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:06 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:06 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:06 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:06 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:08 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:08 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:08 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:08 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:14 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:14 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:14 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:14 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:19 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:19 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:19 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:19 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:23 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:23 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:23 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:23 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:25 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:25 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:25 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:25 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:31 INFO -com.mg.generator.ConfigLoader Load fileNamemybatis-generator.xml
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader dataSource
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader params
2018-01-23 23:31 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:31 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:31 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:35 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:35 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:35 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=uid, column=uid, jdbcType=INT, javaType=Integer], MappingFile [property=nickName, column=nick_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=userName, column=user_name, jdbcType=VARCHAR, javaType=String], MappingFile [property=passWord, column=pass_word, jdbcType=VARCHAR, javaType=String], MappingFile [property=email, column=email, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileNum, column=mobile_num, jdbcType=VARCHAR, javaType=String], MappingFile [property=mobileFlag, column=mobile_flag, jdbcType=CHAR, javaType=String], MappingFile [property=userType, column=user_type, jdbcType=CHAR, javaType=String], MappingFile [property=regTime, column=reg_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=status, column=status, jdbcType=CHAR, javaType=String], MappingFile [property=face, column=face, jdbcType=VARCHAR, javaType=String], MappingFile [property=effectFrom, column=effect_from, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=effectTo, column=effect_to, jdbcType=DATE, javaType=java.sql.Date], MappingFile [property=sourceFlag, column=source_flag, jdbcType=CHAR, javaType=String], MappingFile [property=createTime, column=create_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer]]
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:37 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:37 INFO -com.mg.generator.ConfigLoader 生成的resultMap字段值为：[MappingFile [property=id, column=id, jdbcType=INT, javaType=Integer], MappingFile [property=infoCode, column=info_code, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoTitle, column=info_title, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoDesc, column=info_desc, jdbcType=VARCHAR, javaType=String], MappingFile [property=infoCatgId, column=info_catg_id, jdbcType=INT, javaType=Integer], MappingFile [property=totalViewNum, column=total_view_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalZanNum, column=total_zan_num, jdbcType=INT, javaType=Integer], MappingFile [property=totalFocusNum, column=total_focus_num, jdbcType=INT, javaType=Integer], MappingFile [property=headImgUrl, column=head_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=iconImgUrl, column=icon_img_url, jdbcType=VARCHAR, javaType=String], MappingFile [property=flag, column=flag, jdbcType=VARCHAR, javaType=String], MappingFile [property=pubId, column=pub_id, jdbcType=INT, javaType=Integer], MappingFile [property=deptId, column=dept_id, jdbcType=INT, javaType=Integer], MappingFile [property=orgId, column=org_id, jdbcType=INT, javaType=Integer], MappingFile [property=pubTime, column=pub_time, jdbcType=DATETIME, javaType=java.sql.Timestamp], MappingFile [property=infoType, column=info_type, jdbcType=CHAR, javaType=String]]
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:46 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:46 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:46 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:46 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:46 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:46 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
 <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:46 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:48 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
   <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
   <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
   <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
   <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
   <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
   <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
   <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
   <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="status" column="status" jdbcType="CHAR" javaType="String" >
   <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
   <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
   <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
   <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:48 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:48 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:48 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:48 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:48 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
   <result property="id" column="id" jdbcType="INT" javaType="Integer" >
   <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
   <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
   <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
   <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
   <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
   <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
   <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
   <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
   <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
   <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
   <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
   <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
   <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:48 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:49 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:49 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:49 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:49 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:49 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:49 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:49 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
      <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
      <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
      <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
      <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
      <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
      <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
      <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
      <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="status" column="status" jdbcType="CHAR" javaType="String" >
      <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
      <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
      <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
      <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:50 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
 <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
      <result property="id" column="id" jdbcType="INT" javaType="Integer" >
      <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
      <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
      <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
      <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
      <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
      <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
      <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
      <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
      <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
      <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
      <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
      <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
      <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
      <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
 </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:50 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:50 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:50 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:50 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:50 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
        </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:50 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:51 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
   </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:51 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>

    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:51 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:51 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:51 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:51 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>

    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:51 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-23 23:54 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:54 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-23 23:54 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-23 23:54 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-23 23:54 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-23 23:54 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-23 23:54 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:35 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:35 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:35 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:35 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:35 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader resultMap生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量添加生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量更新生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 单个删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 批量删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 全部删除生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 查询记录总数生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


2018-01-24 09:35 INFO -com.mg.generator.ConfigLoader 列表查询生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:35 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-24 09:40 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader mapper映射文件拼接成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:40 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:40 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:40 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-24 09:40 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-24 09:40 INFO -com.mg.generator.ConfigLoader mapper映射文件拼接成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:40 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 实体类构造开始执行com.morp.model
2018-01-24 09:43 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader dao层接口构造开始执行com.morp.dao
2018-01-24 09:43 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT uid  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT nick_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_name  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pass_word  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT email  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_num  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT mobile_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT user_type  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT reg_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT status  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT face  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_from  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT effect_to  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT source_flag  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT create_time  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_user  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:43 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 实体类构造开始执行com.morp.model
2018-01-24 09:43 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader dao层接口构造开始执行com.morp.dao
2018-01-24 09:43 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT id  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_code  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_title  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_desc  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_catg_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_view_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_zan_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT total_focus_num  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT head_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT icon_img_url  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT flag  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT dept_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT org_id  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT pub_time  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:43 INFO -com.mg.generator.ConfigLoader 查询的SQL为:SELECT info_type  FROM   t_info  WHERE 1=1 
2018-01-24 09:43 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader 实体类构造开始执行com.morp.model
2018-01-24 09:44 INFO -com.mg.generator.DBResource 实体类生成成功UserEbo.java
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader dao层接口构造开始执行com.morp.dao
2018-01-24 09:44 INFO -com.mg.generator.DBResource DAO层接口生成成功：UserDao.java
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：UserMapper.xml
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:44 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader 实体类构造开始执行com.morp.model
2018-01-24 09:44 INFO -com.mg.generator.DBResource 实体类生成成功InfoEbo.java
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader dao层接口构造开始执行com.morp.dao
2018-01-24 09:44 INFO -com.mg.generator.DBResource DAO层接口生成成功：InfoDao.java
2018-01-24 09:44 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:44 INFO -com.mg.generator.DBResource mybatis映射文件生成成功：InfoMapper.xml
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 09:49 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface UserDao{

}

2018-01-24 09:49 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.UserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 09:49 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 09:49 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 09:49 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface InfoDao{

}

2018-01-24 09:49 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader mapper映射文件构造开始执行{com.morp.dao}{com.morp.model}
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 09:49 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.InfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 10:12 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 10:12 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:12 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:12 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 10:12 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 10:12 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:12 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 10:13 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 10:13 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                         user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                         create_time,org_id )
        VALUES ( #{uid},#{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},
                 #{userType},#{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},
                 #{createTime},#{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( uid,nick_name,user_name,pass_word,email,mobile_num,mobile_flag,
                          user_type,reg_time,status,face,effect_from,effect_to,source_flag,
                          create_time,org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.uid},#{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},
              #{item.userType},#{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},
              #{item.createTime},#{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:13 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:13 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 10:13 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 10:13 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:13 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                         total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                         pub_time,info_type )
        VALUES ( #{id},#{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},
                 #{totalFocusNum},#{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},
                 #{pubTime},#{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( id,info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,
                          total_focus_num,head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,
                          pub_time,info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},
              #{item.totalFocusNum},#{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},
              #{item.pubTime},#{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 10:18 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 10:18 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 10:18 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 10:18 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 10:18 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 10:18 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 10:18 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 11:38 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 11:38 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:38 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:38 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 11:38 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 11:38 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:38 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 11:49 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 11:49 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= SQL ============================= -->
<sql id="getUserEbo" >
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
</sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:49 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:49 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 11:49 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 11:49 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:49 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= SQL ============================= -->
<sql id="getInfoEbo" >
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
</sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 11:50 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 11:50 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 11:50 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 11:50 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 11:50 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 11:50 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 11:50 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="batchAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="batchUpdateInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="delBatchInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="deleteAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 12:04 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 12:04 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+UserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:04 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:04 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 12:04 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 12:04 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:04 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+InfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 12:06 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 12:06 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
 t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
           FROM 
t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+UserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
 t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM 
 t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:06 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:06 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 12:06 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 12:06 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:06 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
 t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
           FROM 
t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+InfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
 t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM 
 t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 12:07 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 12:07 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
           FROM 
               t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+UserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM 
                t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:07 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:07 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 12:07 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 12:07 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:07 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
           FROM 
               t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="+bachtUp+InfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM 
                t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 12:10 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 12:10 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
           FROM 
               t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM 
                t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:10 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:10 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 12:10 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 12:10 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:10 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
           FROM 
               t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM 
                t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 12:17 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 12:17 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
           FROM 
               t_user AS t_user
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM 
                t_user AS t_user
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 12:17 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 12:17 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 12:17 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 12:17 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 12:17 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
           FROM 
               t_info AS t_info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM 
                t_info AS t_info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:27 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:27 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                t_user.uid,t_user.nick_name,t_user.user_name,t_user.pass_word,t_user.email,t_user.mobile_num,t_user.mobile_flag,t_user.user_type
               ,t_user.reg_time,t_user.status,t_user.face,t_user.effect_from,t_user.effect_to,t_user.source_flag,t_user.create_time
               ,t_user.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:27 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:27 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                t_info.id,t_info.info_code,t_info.info_title,t_info.info_desc,t_info.info_catg_id,t_info.total_view_num,t_info.total_zan_num,t_info.total_focus_num
               ,t_info.head_img_url,t_info.icon_img_url,t_info.flag,t_info.pub_id,t_info.dept_id,t_info.org_id,t_info.pub_time
               ,t_info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:27 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:27 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:27 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:27 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:27 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                t_chat_pic.id,t_chat_pic.msgid,t_chat_pic.pic_type,t_chat_pic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic
        <set>
          <if test="msgid!= null">msgid=#{msgid},</if>
          <if test="picType!= null">pic_type=#{picType},</if>
          <if test="picUrl!= null">pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic
            <set>
            <if test="msgid!= null">msgid=#{msgid},</if>
            <if test="picType!= null">pic_type=#{picType},</if>
            <if test="picUrl!= null">pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_picASt_chat_pic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                t_chat_pic.id,t_chat_pic.msgid,t_chat_pic.pic_type,t_chat_pic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND t_chat_pic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND t_chat_pic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND t_chat_pic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND t_chat_pic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:29 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:29 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_userASt_user
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:29 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:29 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_infoASt_info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:29 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:29 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:29 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:29 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:29 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic
        <set>
          <if test="msgid!= null">msgid=#{msgid},</if>
          <if test="picType!= null">pic_type=#{picType},</if>
          <if test="picUrl!= null">pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic
            <set>
            <if test="msgid!= null">msgid=#{msgid},</if>
            <if test="picType!= null">pic_type=#{picType},</if>
            <if test="picUrl!= null">pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_picASt_chat_pic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND t_chat_pic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND t_chat_pic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND t_chat_pic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND t_chat_pic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:30 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:30 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user
        <set>
          <if test="nickName!= null">nick_name=#{nickName},</if>
          <if test="userName!= null">user_name=#{userName},</if>
          <if test="passWord!= null">pass_word=#{passWord},</if>
          <if test="email!= null">email=#{email},</if>
          <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">user_type=#{userType},</if>
          <if test="regTime!= null">reg_time=#{regTime},</if>
          <if test="status!= null">status=#{status},</if>
          <if test="face!= null">face=#{face},</if>
          <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">create_time=#{createTime},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user
            <set>
            <if test="nickName!= null">nick_name=#{nickName},</if>
            <if test="userName!= null">user_name=#{userName},</if>
            <if test="passWord!= null">pass_word=#{passWord},</if>
            <if test="email!= null">email=#{email},</if>
            <if test="mobileNum!= null">mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">user_type=#{userType},</if>
            <if test="regTime!= null">reg_time=#{regTime},</if>
            <if test="status!= null">status=#{status},</if>
            <if test="face!= null">face=#{face},</if>
            <if test="effectFrom!= null">effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user AS User
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:30 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:30 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info
        <set>
          <if test="infoCode!= null">info_code=#{infoCode},</if>
          <if test="infoTitle!= null">info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">flag=#{flag},</if>
          <if test="pubId!= null">pub_id=#{pubId},</if>
          <if test="deptId!= null">dept_id=#{deptId},</if>
          <if test="orgId!= null">org_id=#{orgId},</if>
          <if test="pubTime!= null">pub_time=#{pubTime},</if>
          <if test="infoType!= null">info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info
            <set>
            <if test="infoCode!= null">info_code=#{infoCode},</if>
            <if test="infoTitle!= null">info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">flag=#{flag},</if>
            <if test="pubId!= null">pub_id=#{pubId},</if>
            <if test="deptId!= null">dept_id=#{deptId},</if>
            <if test="orgId!= null">org_id=#{orgId},</if>
            <if test="pubTime!= null">pub_time=#{pubTime},</if>
            <if test="infoType!= null">info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_info AS Info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:30 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:30 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:30 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:30 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:30 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic
        <set>
          <if test="msgid!= null">msgid=#{msgid},</if>
          <if test="picType!= null">pic_type=#{picType},</if>
          <if test="picUrl!= null">pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic
            <set>
            <if test="msgid!= null">msgid=#{msgid},</if>
            <if test="picType!= null">pic_type=#{picType},</if>
            <if test="picUrl!= null">pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_pic AS ChatPic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND t_chat_pic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND t_chat_pic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND t_chat_pic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND t_chat_pic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:33 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:33 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user AS User
        <set>
          <if test="nickName!= null">User.nick_name=#{nickName},</if>
          <if test="userName!= null">User.user_name=#{userName},</if>
          <if test="passWord!= null">User.pass_word=#{passWord},</if>
          <if test="email!= null">User.email=#{email},</if>
          <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">User.user_type=#{userType},</if>
          <if test="regTime!= null">User.reg_time=#{regTime},</if>
          <if test="status!= null">User.status=#{status},</if>
          <if test="face!= null">User.face=#{face},</if>
          <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">User.create_time=#{createTime},</if>
          <if test="orgId!= null">User.org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user AS User
            <set>
            <if test="nickName!= null">User.nick_name=#{nickName},</if>
            <if test="userName!= null">User.user_name=#{userName},</if>
            <if test="passWord!= null">User.pass_word=#{passWord},</if>
            <if test="email!= null">User.email=#{email},</if>
            <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">User.user_type=#{userType},</if>
            <if test="regTime!= null">User.reg_time=#{regTime},</if>
            <if test="status!= null">User.status=#{status},</if>
            <if test="face!= null">User.face=#{face},</if>
            <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">User.create_time=#{createTime},</if>
            <if test="orgId!= null">User.org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.User.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user AS User
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND t_user.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND t_user.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND t_user.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND t_user.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND t_user.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND t_user.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND t_user.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND t_user.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND t_user.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND t_user.status = #{status}
            </if>
            <if test="face!= null">
               AND t_user.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND t_user.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND t_user.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND t_user.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND t_user.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND t_user.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:33 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:33 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info AS Info
        <set>
          <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
          <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">Info.flag=#{flag},</if>
          <if test="pubId!= null">Info.pub_id=#{pubId},</if>
          <if test="deptId!= null">Info.dept_id=#{deptId},</if>
          <if test="orgId!= null">Info.org_id=#{orgId},</if>
          <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
          <if test="infoType!= null">Info.info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info AS Info
            <set>
            <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
            <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">Info.flag=#{flag},</if>
            <if test="pubId!= null">Info.pub_id=#{pubId},</if>
            <if test="deptId!= null">Info.dept_id=#{deptId},</if>
            <if test="orgId!= null">Info.org_id=#{orgId},</if>
            <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
            <if test="infoType!= null">Info.info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.Info.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_info AS Info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND t_info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND t_info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND t_info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND t_info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND t_info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND t_info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND t_info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND t_info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND t_info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND t_info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND t_info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND t_info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND t_info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND t_info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND t_info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND t_info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:33 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:33 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:33 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:33 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:33 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic AS ChatPic
        <set>
          <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
          <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
          <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic AS ChatPic
            <set>
            <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
            <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
            <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.ChatPic.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_pic AS ChatPic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND t_chat_pic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND t_chat_pic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND t_chat_pic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND t_chat_pic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:34 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:34 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user AS User
        <set>
          <if test="nickName!= null">User.nick_name=#{nickName},</if>
          <if test="userName!= null">User.user_name=#{userName},</if>
          <if test="passWord!= null">User.pass_word=#{passWord},</if>
          <if test="email!= null">User.email=#{email},</if>
          <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">User.user_type=#{userType},</if>
          <if test="regTime!= null">User.reg_time=#{regTime},</if>
          <if test="status!= null">User.status=#{status},</if>
          <if test="face!= null">User.face=#{face},</if>
          <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">User.create_time=#{createTime},</if>
          <if test="orgId!= null">User.org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user AS User
            <set>
            <if test="nickName!= null">User.nick_name=#{nickName},</if>
            <if test="userName!= null">User.user_name=#{userName},</if>
            <if test="passWord!= null">User.pass_word=#{passWord},</if>
            <if test="email!= null">User.email=#{email},</if>
            <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">User.user_type=#{userType},</if>
            <if test="regTime!= null">User.reg_time=#{regTime},</if>
            <if test="status!= null">User.status=#{status},</if>
            <if test="face!= null">User.face=#{face},</if>
            <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">User.create_time=#{createTime},</if>
            <if test="orgId!= null">User.org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.User.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user AS User
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND User.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND User.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND User.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND User.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND User.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND User.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND User.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND User.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND User.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND User.status = #{status}
            </if>
            <if test="face!= null">
               AND User.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND User.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND User.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND User.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND User.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND User.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:34 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:34 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info AS Info
        <set>
          <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
          <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">Info.flag=#{flag},</if>
          <if test="pubId!= null">Info.pub_id=#{pubId},</if>
          <if test="deptId!= null">Info.dept_id=#{deptId},</if>
          <if test="orgId!= null">Info.org_id=#{orgId},</if>
          <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
          <if test="infoType!= null">Info.info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info AS Info
            <set>
            <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
            <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">Info.flag=#{flag},</if>
            <if test="pubId!= null">Info.pub_id=#{pubId},</if>
            <if test="deptId!= null">Info.dept_id=#{deptId},</if>
            <if test="orgId!= null">Info.org_id=#{orgId},</if>
            <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
            <if test="infoType!= null">Info.info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.Info.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_info AS Info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND Info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND Info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND Info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND Info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND Info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND Info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND Info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND Info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND Info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND Info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND Info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND Info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND Info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND Info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND Info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND Info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:34 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:34 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:34 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:34 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:34 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic AS ChatPic
        <set>
          <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
          <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
          <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic AS ChatPic
            <set>
            <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
            <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
            <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.ChatPic.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_pic AS ChatPic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND ChatPic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND ChatPic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND ChatPic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND ChatPic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:35 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:35 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user AS User
        <set>
          <if test="nickName!= null">User.nick_name=#{nickName},</if>
          <if test="userName!= null">User.user_name=#{userName},</if>
          <if test="passWord!= null">User.pass_word=#{passWord},</if>
          <if test="email!= null">User.email=#{email},</if>
          <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">User.user_type=#{userType},</if>
          <if test="regTime!= null">User.reg_time=#{regTime},</if>
          <if test="status!= null">User.status=#{status},</if>
          <if test="face!= null">User.face=#{face},</if>
          <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">User.create_time=#{createTime},</if>
          <if test="orgId!= null">User.org_id=#{orgId},</if>
        </set>
        WHERE uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user AS User
            <set>
            <if test="nickName!= null">User.nick_name=#{nickName},</if>
            <if test="userName!= null">User.user_name=#{userName},</if>
            <if test="passWord!= null">User.pass_word=#{passWord},</if>
            <if test="email!= null">User.email=#{email},</if>
            <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">User.user_type=#{userType},</if>
            <if test="regTime!= null">User.reg_time=#{regTime},</if>
            <if test="status!= null">User.status=#{status},</if>
            <if test="face!= null">User.face=#{face},</if>
            <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">User.create_time=#{createTime},</if>
            <if test="orgId!= null">User.org_id=#{orgId},</if>
            </set>
            WHERE uid=#{item.User.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE User.uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            User.uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user AS User
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND User.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND User.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND User.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND User.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND User.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND User.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND User.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND User.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND User.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND User.status = #{status}
            </if>
            <if test="face!= null">
               AND User.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND User.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND User.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND User.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND User.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND User.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:35 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:35 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info AS Info
        <set>
          <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
          <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">Info.flag=#{flag},</if>
          <if test="pubId!= null">Info.pub_id=#{pubId},</if>
          <if test="deptId!= null">Info.dept_id=#{deptId},</if>
          <if test="orgId!= null">Info.org_id=#{orgId},</if>
          <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
          <if test="infoType!= null">Info.info_type=#{infoType},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info AS Info
            <set>
            <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
            <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">Info.flag=#{flag},</if>
            <if test="pubId!= null">Info.pub_id=#{pubId},</if>
            <if test="deptId!= null">Info.dept_id=#{deptId},</if>
            <if test="orgId!= null">Info.org_id=#{orgId},</if>
            <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
            <if test="infoType!= null">Info.info_type=#{infoType},</if>
            </set>
            WHERE id=#{item.Info.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE Info.id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            Info.id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_info AS Info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND Info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND Info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND Info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND Info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND Info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND Info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND Info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND Info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND Info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND Info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND Info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND Info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND Info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND Info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND Info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND Info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:35 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:35 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:35 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:35 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:35 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic AS ChatPic
        <set>
          <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
          <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
          <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
        </set>
        WHERE id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic AS ChatPic
            <set>
            <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
            <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
            <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
            </set>
            WHERE id=#{item.ChatPic.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE ChatPic.id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            ChatPic.id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_pic AS ChatPic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND ChatPic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND ChatPic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND ChatPic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND ChatPic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader uid: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader nick_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader user_name: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader pass_word: 12(VARCHAR), 80(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader email: 12(VARCHAR), 120(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader mobile_num: 12(VARCHAR), 20(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader mobile_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader user_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader reg_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader status: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader face: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader effect_from: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader effect_to: 91(DATE), 10(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader source_flag: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader create_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class UserEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer uid;
    private String nickName;
    private String userName;
    private String passWord;
    private String email;
    private String mobileNum;
    private String mobileFlag;
    private String userType;
    private java.sql.Timestamp regTime;
    private String status;
    private String face;
    private java.sql.Date effectFrom;
    private java.sql.Date effectTo;
    private String sourceFlag;
    private java.sql.Timestamp createTime;
    private Integer orgId;


    public Integer getUid() {
        return uid;
   }

    public void setUid(Integer uid) {
        this.uid = uid;
   }

    public String getNickName() {
        return nickName;
   }

    public void setNickName(String nickName) {
        this.nickName = nickName;
   }

    public String getUserName() {
        return userName;
   }

    public void setUserName(String userName) {
        this.userName = userName;
   }

    public String getPassWord() {
        return passWord;
   }

    public void setPassWord(String passWord) {
        this.passWord = passWord;
   }

    public String getEmail() {
        return email;
   }

    public void setEmail(String email) {
        this.email = email;
   }

    public String getMobileNum() {
        return mobileNum;
   }

    public void setMobileNum(String mobileNum) {
        this.mobileNum = mobileNum;
   }

    public String getMobileFlag() {
        return mobileFlag;
   }

    public void setMobileFlag(String mobileFlag) {
        this.mobileFlag = mobileFlag;
   }

    public String getUserType() {
        return userType;
   }

    public void setUserType(String userType) {
        this.userType = userType;
   }

    public java.sql.Timestamp getRegTime() {
        return regTime;
   }

    public void setRegTime(java.sql.Timestamp regTime) {
        this.regTime = regTime;
   }

    public String getStatus() {
        return status;
   }

    public void setStatus(String status) {
        this.status = status;
   }

    public String getFace() {
        return face;
   }

    public void setFace(String face) {
        this.face = face;
   }

    public java.sql.Date getEffectFrom() {
        return effectFrom;
   }

    public void setEffectFrom(java.sql.Date effectFrom) {
        this.effectFrom = effectFrom;
   }

    public java.sql.Date getEffectTo() {
        return effectTo;
   }

    public void setEffectTo(java.sql.Date effectTo) {
        this.effectTo = effectTo;
   }

    public String getSourceFlag() {
        return sourceFlag;
   }

    public void setSourceFlag(String sourceFlag) {
        this.sourceFlag = sourceFlag;
   }

    public java.sql.Timestamp getCreateTime() {
        return createTime;
   }

    public void setCreateTime(java.sql.Timestamp createTime) {
        this.createTime = createTime;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

}


2018-01-24 13:37 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IUserDao{

}

2018-01-24 13:37 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IUserDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="UserEboMap" type="com.morp.model.UserEbo" >
        <result property="uid" column="uid" jdbcType="INT" javaType="Integer" >
        <result property="nickName" column="nick_name" jdbcType="VARCHAR" javaType="String" >
        <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="String" >
        <result property="passWord" column="pass_word" jdbcType="VARCHAR" javaType="String" >
        <result property="email" column="email" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileNum" column="mobile_num" jdbcType="VARCHAR" javaType="String" >
        <result property="mobileFlag" column="mobile_flag" jdbcType="CHAR" javaType="String" >
        <result property="userType" column="user_type" jdbcType="CHAR" javaType="String" >
        <result property="regTime" column="reg_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="status" column="status" jdbcType="CHAR" javaType="String" >
        <result property="face" column="face" jdbcType="VARCHAR" javaType="String" >
        <result property="effectFrom" column="effect_from" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="effectTo" column="effect_to" jdbcType="DATE" javaType="java.sql.Date" >
        <result property="sourceFlag" column="source_flag" jdbcType="CHAR" javaType="String" >
        <result property="createTime" column="create_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getUserEbo" >
          SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
           FROM 
               t_user AS User
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                         reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                         org_id )
        VALUES ( #{nickName},#{userName},#{passWord},#{email},#{mobileNum},#{mobileFlag},#{userType},
                 #{regTime},#{status},#{face},#{effectFrom},#{effectTo},#{sourceFlag},#{createTime},
                 #{orgId})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddUserEbo" parameterType="com.morp.model.UserEbo" useGeneratedKeys="true" keyProperty="uid" >
        INSERT INTO t_user( nick_name,user_name,pass_word,email,mobile_num,mobile_flag,user_type,
                          reg_time,status,face,effect_from,effect_to,source_flag,create_time,
                          org_id )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.nickName},#{item.userName},#{item.passWord},#{item.email},#{item.mobileNum},#{item.mobileFlag},#{item.userType},
              #{item.regTime},#{item.status},#{item.face},#{item.effectFrom},#{item.effectTo},#{item.sourceFlag},#{item.createTime},
              #{item.orgId} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateUserEbo">
        UPDATE t_user AS User
        <set>
          <if test="nickName!= null">User.nick_name=#{nickName},</if>
          <if test="userName!= null">User.user_name=#{userName},</if>
          <if test="passWord!= null">User.pass_word=#{passWord},</if>
          <if test="email!= null">User.email=#{email},</if>
          <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
          <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
          <if test="userType!= null">User.user_type=#{userType},</if>
          <if test="regTime!= null">User.reg_time=#{regTime},</if>
          <if test="status!= null">User.status=#{status},</if>
          <if test="face!= null">User.face=#{face},</if>
          <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
          <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
          <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
          <if test="createTime!= null">User.create_time=#{createTime},</if>
          <if test="orgId!= null">User.org_id=#{orgId},</if>
        </set>
        WHERE User.uid=#{uid} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpUserEbo" parameterType="java.util.List">
        <foreach collection="listUserEbo" item="item" index="index"  separator=";">
            UPDATE t_user AS User
            <set>
            <if test="nickName!= null">User.nick_name=#{nickName},</if>
            <if test="userName!= null">User.user_name=#{userName},</if>
            <if test="passWord!= null">User.pass_word=#{passWord},</if>
            <if test="email!= null">User.email=#{email},</if>
            <if test="mobileNum!= null">User.mobile_num=#{mobileNum},</if>
            <if test="mobileFlag!= null">User.mobile_flag=#{mobileFlag},</if>
            <if test="userType!= null">User.user_type=#{userType},</if>
            <if test="regTime!= null">User.reg_time=#{regTime},</if>
            <if test="status!= null">User.status=#{status},</if>
            <if test="face!= null">User.face=#{face},</if>
            <if test="effectFrom!= null">User.effect_from=#{effectFrom},</if>
            <if test="effectTo!= null">User.effect_to=#{effectTo},</if>
            <if test="sourceFlag!= null">User.source_flag=#{sourceFlag},</if>
            <if test="createTime!= null">User.create_time=#{createTime},</if>
            <if test="orgId!= null">User.org_id=#{orgId},</if>
            </set>
            WHERE User.uid=#{item.User.uid} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delUserEboById">
        DELETE FROM t_user
        WHERE uid=#{uid} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelUserEboById">
        DELETE FROM t_user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            uid=#{item.uid} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_user
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user AS User
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listUserEbo" resultMap="UserEboMap">
        SELECT 
                User.uid,User.nick_name,User.user_name,User.pass_word,User.email,User.mobile_num,User.mobile_flag,User.user_type
               ,User.reg_time,User.status,User.face,User.effect_from,User.effect_to,User.source_flag,User.create_time
               ,User.org_id
         FROM 
                t_user AS User
        <where>
            <if test="uid!= null">
               AND User.uid = #{uid}
            </if>
            <if test="nickName!= null">
               AND User.nick_name = #{nickName}
            </if>
            <if test="userName!= null">
               AND User.user_name = #{userName}
            </if>
            <if test="passWord!= null">
               AND User.pass_word = #{passWord}
            </if>
            <if test="email!= null">
               AND User.email = #{email}
            </if>
            <if test="mobileNum!= null">
               AND User.mobile_num = #{mobileNum}
            </if>
            <if test="mobileFlag!= null">
               AND User.mobile_flag = #{mobileFlag}
            </if>
            <if test="userType!= null">
               AND User.user_type = #{userType}
            </if>
            <if test="regTime!= null">
               AND User.reg_time = #{regTime}
            </if>
            <if test="status!= null">
               AND User.status = #{status}
            </if>
            <if test="face!= null">
               AND User.face = #{face}
            </if>
            <if test="effectFrom!= null">
               AND User.effect_from = #{effectFrom}
            </if>
            <if test="effectTo!= null">
               AND User.effect_to = #{effectTo}
            </if>
            <if test="sourceFlag!= null">
               AND User.source_flag = #{sourceFlag}
            </if>
            <if test="createTime!= null">
               AND User.create_time = #{createTime}
            </if>
            <if test="orgId!= null">
               AND User.org_id = #{orgId}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader info_code: 12(VARCHAR), 64(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader info_title: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader info_desc: 12(VARCHAR), 512(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader info_catg_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader total_view_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader total_zan_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader total_focus_num: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader head_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader icon_img_url: 12(VARCHAR), 1024(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader flag: 12(VARCHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader pub_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader dept_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader org_id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader pub_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader info_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class InfoEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String infoCode;
    private String infoTitle;
    private String infoDesc;
    private Integer infoCatgId;
    private Integer totalViewNum;
    private Integer totalZanNum;
    private Integer totalFocusNum;
    private String headImgUrl;
    private String iconImgUrl;
    private String flag;
    private Integer pubId;
    private Integer deptId;
    private Integer orgId;
    private java.sql.Timestamp pubTime;
    private String infoType;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getInfoCode() {
        return infoCode;
   }

    public void setInfoCode(String infoCode) {
        this.infoCode = infoCode;
   }

    public String getInfoTitle() {
        return infoTitle;
   }

    public void setInfoTitle(String infoTitle) {
        this.infoTitle = infoTitle;
   }

    public String getInfoDesc() {
        return infoDesc;
   }

    public void setInfoDesc(String infoDesc) {
        this.infoDesc = infoDesc;
   }

    public Integer getInfoCatgId() {
        return infoCatgId;
   }

    public void setInfoCatgId(Integer infoCatgId) {
        this.infoCatgId = infoCatgId;
   }

    public Integer getTotalViewNum() {
        return totalViewNum;
   }

    public void setTotalViewNum(Integer totalViewNum) {
        this.totalViewNum = totalViewNum;
   }

    public Integer getTotalZanNum() {
        return totalZanNum;
   }

    public void setTotalZanNum(Integer totalZanNum) {
        this.totalZanNum = totalZanNum;
   }

    public Integer getTotalFocusNum() {
        return totalFocusNum;
   }

    public void setTotalFocusNum(Integer totalFocusNum) {
        this.totalFocusNum = totalFocusNum;
   }

    public String getHeadImgUrl() {
        return headImgUrl;
   }

    public void setHeadImgUrl(String headImgUrl) {
        this.headImgUrl = headImgUrl;
   }

    public String getIconImgUrl() {
        return iconImgUrl;
   }

    public void setIconImgUrl(String iconImgUrl) {
        this.iconImgUrl = iconImgUrl;
   }

    public String getFlag() {
        return flag;
   }

    public void setFlag(String flag) {
        this.flag = flag;
   }

    public Integer getPubId() {
        return pubId;
   }

    public void setPubId(Integer pubId) {
        this.pubId = pubId;
   }

    public Integer getDeptId() {
        return deptId;
   }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
   }

    public Integer getOrgId() {
        return orgId;
   }

    public void setOrgId(Integer orgId) {
        this.orgId = orgId;
   }

    public java.sql.Timestamp getPubTime() {
        return pubTime;
   }

    public void setPubTime(java.sql.Timestamp pubTime) {
        this.pubTime = pubTime;
   }

    public String getInfoType() {
        return infoType;
   }

    public void setInfoType(String infoType) {
        this.infoType = infoType;
   }

}


2018-01-24 13:37 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IInfoDao{

}

2018-01-24 13:37 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IInfoDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="InfoEboMap" type="com.morp.model.InfoEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="infoCode" column="info_code" jdbcType="VARCHAR" javaType="String" >
        <result property="infoTitle" column="info_title" jdbcType="VARCHAR" javaType="String" >
        <result property="infoDesc" column="info_desc" jdbcType="VARCHAR" javaType="String" >
        <result property="infoCatgId" column="info_catg_id" jdbcType="INT" javaType="Integer" >
        <result property="totalViewNum" column="total_view_num" jdbcType="INT" javaType="Integer" >
        <result property="totalZanNum" column="total_zan_num" jdbcType="INT" javaType="Integer" >
        <result property="totalFocusNum" column="total_focus_num" jdbcType="INT" javaType="Integer" >
        <result property="headImgUrl" column="head_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="iconImgUrl" column="icon_img_url" jdbcType="VARCHAR" javaType="String" >
        <result property="flag" column="flag" jdbcType="VARCHAR" javaType="String" >
        <result property="pubId" column="pub_id" jdbcType="INT" javaType="Integer" >
        <result property="deptId" column="dept_id" jdbcType="INT" javaType="Integer" >
        <result property="orgId" column="org_id" jdbcType="INT" javaType="Integer" >
        <result property="pubTime" column="pub_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="infoType" column="info_type" jdbcType="CHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getInfoEbo" >
          SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
           FROM 
               t_info AS Info
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                         head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                         info_type )
        VALUES ( #{infoCode},#{infoTitle},#{infoDesc},#{infoCatgId},#{totalViewNum},#{totalZanNum},#{totalFocusNum},
                 #{headImgUrl},#{iconImgUrl},#{flag},#{pubId},#{deptId},#{orgId},#{pubTime},
                 #{infoType})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddInfoEbo" parameterType="com.morp.model.InfoEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_info( info_code,info_title,info_desc,info_catg_id,total_view_num,total_zan_num,total_focus_num,
                          head_img_url,icon_img_url,flag,pub_id,dept_id,org_id,pub_time,
                          info_type )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.infoCode},#{item.infoTitle},#{item.infoDesc},#{item.infoCatgId},#{item.totalViewNum},#{item.totalZanNum},#{item.totalFocusNum},
              #{item.headImgUrl},#{item.iconImgUrl},#{item.flag},#{item.pubId},#{item.deptId},#{item.orgId},#{item.pubTime},
              #{item.infoType} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateInfoEbo">
        UPDATE t_info AS Info
        <set>
          <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
          <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
          <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
          <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
          <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
          <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
          <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
          <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
          <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
          <if test="flag!= null">Info.flag=#{flag},</if>
          <if test="pubId!= null">Info.pub_id=#{pubId},</if>
          <if test="deptId!= null">Info.dept_id=#{deptId},</if>
          <if test="orgId!= null">Info.org_id=#{orgId},</if>
          <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
          <if test="infoType!= null">Info.info_type=#{infoType},</if>
        </set>
        WHERE Info.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpInfoEbo" parameterType="java.util.List">
        <foreach collection="listInfoEbo" item="item" index="index"  separator=";">
            UPDATE t_info AS Info
            <set>
            <if test="infoCode!= null">Info.info_code=#{infoCode},</if>
            <if test="infoTitle!= null">Info.info_title=#{infoTitle},</if>
            <if test="infoDesc!= null">Info.info_desc=#{infoDesc},</if>
            <if test="infoCatgId!= null">Info.info_catg_id=#{infoCatgId},</if>
            <if test="totalViewNum!= null">Info.total_view_num=#{totalViewNum},</if>
            <if test="totalZanNum!= null">Info.total_zan_num=#{totalZanNum},</if>
            <if test="totalFocusNum!= null">Info.total_focus_num=#{totalFocusNum},</if>
            <if test="headImgUrl!= null">Info.head_img_url=#{headImgUrl},</if>
            <if test="iconImgUrl!= null">Info.icon_img_url=#{iconImgUrl},</if>
            <if test="flag!= null">Info.flag=#{flag},</if>
            <if test="pubId!= null">Info.pub_id=#{pubId},</if>
            <if test="deptId!= null">Info.dept_id=#{deptId},</if>
            <if test="orgId!= null">Info.org_id=#{orgId},</if>
            <if test="pubTime!= null">Info.pub_time=#{pubTime},</if>
            <if test="infoType!= null">Info.info_type=#{infoType},</if>
            </set>
            WHERE Info.id=#{item.Info.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delInfoEboById">
        DELETE FROM t_info
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelInfoEboById">
        DELETE FROM t_info
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_info
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_info AS Info
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listInfoEbo" resultMap="InfoEboMap">
        SELECT 
                Info.id,Info.info_code,Info.info_title,Info.info_desc,Info.info_catg_id,Info.total_view_num,Info.total_zan_num,Info.total_focus_num
               ,Info.head_img_url,Info.icon_img_url,Info.flag,Info.pub_id,Info.dept_id,Info.org_id,Info.pub_time
               ,Info.info_type
         FROM 
                t_info AS Info
        <where>
            <if test="id!= null">
               AND Info.id = #{id}
            </if>
            <if test="infoCode!= null">
               AND Info.info_code = #{infoCode}
            </if>
            <if test="infoTitle!= null">
               AND Info.info_title = #{infoTitle}
            </if>
            <if test="infoDesc!= null">
               AND Info.info_desc = #{infoDesc}
            </if>
            <if test="infoCatgId!= null">
               AND Info.info_catg_id = #{infoCatgId}
            </if>
            <if test="totalViewNum!= null">
               AND Info.total_view_num = #{totalViewNum}
            </if>
            <if test="totalZanNum!= null">
               AND Info.total_zan_num = #{totalZanNum}
            </if>
            <if test="totalFocusNum!= null">
               AND Info.total_focus_num = #{totalFocusNum}
            </if>
            <if test="headImgUrl!= null">
               AND Info.head_img_url = #{headImgUrl}
            </if>
            <if test="iconImgUrl!= null">
               AND Info.icon_img_url = #{iconImgUrl}
            </if>
            <if test="flag!= null">
               AND Info.flag = #{flag}
            </if>
            <if test="pubId!= null">
               AND Info.pub_id = #{pubId}
            </if>
            <if test="deptId!= null">
               AND Info.dept_id = #{deptId}
            </if>
            <if test="orgId!= null">
               AND Info.org_id = #{orgId}
            </if>
            <if test="pubTime!= null">
               AND Info.pub_time = #{pubTime}
            </if>
            <if test="infoType!= null">
               AND Info.info_type = #{infoType}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader id: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader msgid: 12(VARCHAR), 40(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader pic_type: 1(CHAR), 1(精确度), 0(小数点后位数)
2018-01-24 13:37 DEBUG -com.mg.generator.ConfigLoader pic_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:37 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class ChatPicEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String msgid;
    private String picType;
    private String picUrl;


    public Integer getId() {
        return id;
   }

    public void setId(Integer id) {
        this.id = id;
   }

    public String getMsgid() {
        return msgid;
   }

    public void setMsgid(String msgid) {
        this.msgid = msgid;
   }

    public String getPicType() {
        return picType;
   }

    public void setPicType(String picType) {
        this.picType = picType;
   }

    public String getPicUrl() {
        return picUrl;
   }

    public void setPicUrl(String picUrl) {
        this.picUrl = picUrl;
   }

}


2018-01-24 13:37 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IChatPicDao{

}

2018-01-24 13:37 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:37 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IChatPicDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="ChatPicEboMap" type="com.morp.model.ChatPicEbo" >
        <result property="id" column="id" jdbcType="INT" javaType="Integer" >
        <result property="msgid" column="msgid" jdbcType="VARCHAR" javaType="String" >
        <result property="picType" column="pic_type" jdbcType="CHAR" javaType="String" >
        <result property="picUrl" column="pic_url" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getChatPicEbo" >
          SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
           FROM 
               t_chat_pic AS ChatPic
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES ( #{msgid},#{picType},#{picUrl})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddChatPicEbo" parameterType="com.morp.model.ChatPicEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO t_chat_pic( msgid,pic_type,pic_url )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.msgid},#{item.picType},#{item.picUrl} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateChatPicEbo">
        UPDATE t_chat_pic AS ChatPic
        <set>
          <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
          <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
          <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
        </set>
        WHERE ChatPic.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpChatPicEbo" parameterType="java.util.List">
        <foreach collection="listChatPicEbo" item="item" index="index"  separator=";">
            UPDATE t_chat_pic AS ChatPic
            <set>
            <if test="msgid!= null">ChatPic.msgid=#{msgid},</if>
            <if test="picType!= null">ChatPic.pic_type=#{picType},</if>
            <if test="picUrl!= null">ChatPic.pic_url=#{picUrl},</if>
            </set>
            WHERE ChatPic.id=#{item.ChatPic.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelChatPicEboById">
        DELETE FROM t_chat_pic
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM t_chat_pic
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_chat_pic AS ChatPic
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listChatPicEbo" resultMap="ChatPicEboMap">
        SELECT 
                ChatPic.id,ChatPic.msgid,ChatPic.pic_type,ChatPic.pic_url
         FROM 
                t_chat_pic AS ChatPic
        <where>
            <if test="id!= null">
               AND ChatPic.id = #{id}
            </if>
            <if test="msgid!= null">
               AND ChatPic.msgid = #{msgid}
            </if>
            <if test="picType!= null">
               AND ChatPic.pic_type = #{picType}
            </if>
            <if test="picUrl!= null">
               AND ChatPic.pic_url = #{picUrl}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection failure error{Access denied for user 'syhd_test'@'10.10.1.180' (using password: YES)}
2018-01-24 13:41 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class MeEbo implements Serializable{

    private static final long serialVersionUID = 1L;



}


2018-01-24 13:41 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IMeDao{

}

2018-01-24 13:41 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:41 ERROR -com.mg.generator.DBResource 
java.util.NoSuchElementException
	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:396)
	at java.util.LinkedHashMap$KeyIterator.next(LinkedHashMap.java:405)
	at com.mg.generator.CodeBuilder.buildMapperSource(CodeBuilder.java:204)
	at com.mg.generator.CallGenerator.generator(CallGenerator.java:70)
	at com.mg.generator.CallGenerator.main(CallGenerator.java:14)
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader big_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader descript: 12(VARCHAR), 5120(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader develop: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader hot_level: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader package_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader release_time: 93(TIMESTAMP), 19(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader size: 12(VARCHAR), 10(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader small_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader version: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader classid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader langid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader systemid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader eng_name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader status: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader score: 3(DECIMAL), 3(精确度), 1(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader poster_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader score_flower: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader score_shit: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader ypk_data_dir: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader gametypeid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader offshelves_reason: 12(VARCHAR), 256(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader video_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader minsdk: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader online: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader version_code: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader storetype: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader submit_editor_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader gangdian: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader update_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader gd_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader article_id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:41 DEBUG -com.mg.generator.ConfigLoader control_config_info: -1(VARCHAR), 21845(精确度), 0(小数点后位数)
2018-01-24 13:41 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class MeEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private String id;
    private String bigLogurl;
    private String descript;
    private String develop;
    private String name;
    private Integer hotLevel;
    private String packageName;
    private java.sql.Timestamp releaseTime;
    private String size;
    private String smallLogurl;
    private String version;
    private String classid;
    private String langid;
    private String systemid;
    private String engName;
    private Integer status;
    private java.math.BigDecimal score;
    private String posterUrl;
    private Integer scoreFlower;
    private Integer scoreShit;
    private String ypkDataDir;
    private String gametypeid;
    private String offshelvesReason;
    private String videoUrl;
    private Integer minsdk;
    private Boolean online;
    private String versionCode;
    private Boolean storetype;
    private String submitEditorName;
    private Boolean gangdian;
    private java.sql.Timestamp updateTime;
    private String gdLogurl;
    private String articleId;
    private String controlConfigInfo;


    public String getId() {
        return id;
   }

    public void setId(String id) {
        this.id = id;
   }

    public String getBigLogurl() {
        return bigLogurl;
   }

    public void setBigLogurl(String bigLogurl) {
        this.bigLogurl = bigLogurl;
   }

    public String getDescript() {
        return descript;
   }

    public void setDescript(String descript) {
        this.descript = descript;
   }

    public String getDevelop() {
        return develop;
   }

    public void setDevelop(String develop) {
        this.develop = develop;
   }

    public String getName() {
        return name;
   }

    public void setName(String name) {
        this.name = name;
   }

    public Integer getHotLevel() {
        return hotLevel;
   }

    public void setHotLevel(Integer hotLevel) {
        this.hotLevel = hotLevel;
   }

    public String getPackageName() {
        return packageName;
   }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
   }

    public java.sql.Timestamp getReleaseTime() {
        return releaseTime;
   }

    public void setReleaseTime(java.sql.Timestamp releaseTime) {
        this.releaseTime = releaseTime;
   }

    public String getSize() {
        return size;
   }

    public void setSize(String size) {
        this.size = size;
   }

    public String getSmallLogurl() {
        return smallLogurl;
   }

    public void setSmallLogurl(String smallLogurl) {
        this.smallLogurl = smallLogurl;
   }

    public String getVersion() {
        return version;
   }

    public void setVersion(String version) {
        this.version = version;
   }

    public String getClassid() {
        return classid;
   }

    public void setClassid(String classid) {
        this.classid = classid;
   }

    public String getLangid() {
        return langid;
   }

    public void setLangid(String langid) {
        this.langid = langid;
   }

    public String getSystemid() {
        return systemid;
   }

    public void setSystemid(String systemid) {
        this.systemid = systemid;
   }

    public String getEngName() {
        return engName;
   }

    public void setEngName(String engName) {
        this.engName = engName;
   }

    public Integer getStatus() {
        return status;
   }

    public void setStatus(Integer status) {
        this.status = status;
   }

    public java.math.BigDecimal getScore() {
        return score;
   }

    public void setScore(java.math.BigDecimal score) {
        this.score = score;
   }

    public String getPosterUrl() {
        return posterUrl;
   }

    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
   }

    public Integer getScoreFlower() {
        return scoreFlower;
   }

    public void setScoreFlower(Integer scoreFlower) {
        this.scoreFlower = scoreFlower;
   }

    public Integer getScoreShit() {
        return scoreShit;
   }

    public void setScoreShit(Integer scoreShit) {
        this.scoreShit = scoreShit;
   }

    public String getYpkDataDir() {
        return ypkDataDir;
   }

    public void setYpkDataDir(String ypkDataDir) {
        this.ypkDataDir = ypkDataDir;
   }

    public String getGametypeid() {
        return gametypeid;
   }

    public void setGametypeid(String gametypeid) {
        this.gametypeid = gametypeid;
   }

    public String getOffshelvesReason() {
        return offshelvesReason;
   }

    public void setOffshelvesReason(String offshelvesReason) {
        this.offshelvesReason = offshelvesReason;
   }

    public String getVideoUrl() {
        return videoUrl;
   }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
   }

    public Integer getMinsdk() {
        return minsdk;
   }

    public void setMinsdk(Integer minsdk) {
        this.minsdk = minsdk;
   }

    public Boolean getOnline() {
        return online;
   }

    public void setOnline(Boolean online) {
        this.online = online;
   }

    public String getVersionCode() {
        return versionCode;
   }

    public void setVersionCode(String versionCode) {
        this.versionCode = versionCode;
   }

    public Boolean getStoretype() {
        return storetype;
   }

    public void setStoretype(Boolean storetype) {
        this.storetype = storetype;
   }

    public String getSubmitEditorName() {
        return submitEditorName;
   }

    public void setSubmitEditorName(String submitEditorName) {
        this.submitEditorName = submitEditorName;
   }

    public Boolean getGangdian() {
        return gangdian;
   }

    public void setGangdian(Boolean gangdian) {
        this.gangdian = gangdian;
   }

    public java.sql.Timestamp getUpdateTime() {
        return updateTime;
   }

    public void setUpdateTime(java.sql.Timestamp updateTime) {
        this.updateTime = updateTime;
   }

    public String getGdLogurl() {
        return gdLogurl;
   }

    public void setGdLogurl(String gdLogurl) {
        this.gdLogurl = gdLogurl;
   }

    public String getArticleId() {
        return articleId;
   }

    public void setArticleId(String articleId) {
        this.articleId = articleId;
   }

    public String getControlConfigInfo() {
        return controlConfigInfo;
   }

    public void setControlConfigInfo(String controlConfigInfo) {
        this.controlConfigInfo = controlConfigInfo;
   }

}


2018-01-24 13:41 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IMeDao{

}

2018-01-24 13:41 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:41 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IMeDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="MeEboMap" type="com.morp.model.MeEbo" >
        <result property="id" column="id" jdbcType="VARCHAR" javaType="String" >
        <result property="bigLogurl" column="big_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="descript" column="descript" jdbcType="VARCHAR" javaType="String" >
        <result property="develop" column="develop" jdbcType="VARCHAR" javaType="String" >
        <result property="name" column="name" jdbcType="VARCHAR" javaType="String" >
        <result property="hotLevel" column="hot_level" jdbcType="INT" javaType="Integer" >
        <result property="packageName" column="package_name" jdbcType="VARCHAR" javaType="String" >
        <result property="releaseTime" column="release_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" >
        <result property="size" column="size" jdbcType="VARCHAR" javaType="String" >
        <result property="smallLogurl" column="small_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="version" column="version" jdbcType="VARCHAR" javaType="String" >
        <result property="classid" column="classid" jdbcType="VARCHAR" javaType="String" >
        <result property="langid" column="langid" jdbcType="VARCHAR" javaType="String" >
        <result property="systemid" column="systemid" jdbcType="VARCHAR" javaType="String" >
        <result property="engName" column="eng_name" jdbcType="VARCHAR" javaType="String" >
        <result property="status" column="status" jdbcType="INT" javaType="Integer" >
        <result property="score" column="score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" >
        <result property="posterUrl" column="poster_url" jdbcType="VARCHAR" javaType="String" >
        <result property="scoreFlower" column="score_flower" jdbcType="INT" javaType="Integer" >
        <result property="scoreShit" column="score_shit" jdbcType="INT" javaType="Integer" >
        <result property="ypkDataDir" column="ypk_data_dir" jdbcType="VARCHAR" javaType="String" >
        <result property="gametypeid" column="gametypeid" jdbcType="VARCHAR" javaType="String" >
        <result property="offshelvesReason" column="offshelves_reason" jdbcType="VARCHAR" javaType="String" >
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR" javaType="String" >
        <result property="minsdk" column="minsdk" jdbcType="INT" javaType="Integer" >
        <result property="online" column="online" jdbcType="TINYINT" javaType="Boolean" >
        <result property="versionCode" column="version_code" jdbcType="VARCHAR" javaType="String" >
        <result property="storetype" column="storetype" jdbcType="TINYINT" javaType="Boolean" >
        <result property="submitEditorName" column="submit_editor_name" jdbcType="VARCHAR" javaType="String" >
        <result property="gangdian" column="gangdian" jdbcType="TINYINT" javaType="Boolean" >
        <result property="updateTime" column="update_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="gdLogurl" column="gd_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="articleId" column="article_id" jdbcType="VARCHAR" javaType="String" >
        <result property="controlConfigInfo" column="control_config_info" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getMeEbo" >
          SELECT 
                Me.id,Me.big_logurl,Me.descript,Me.develop,Me.name,Me.hot_level,Me.package_name,Me.release_time
               ,Me.size,Me.small_logurl,Me.version,Me.classid,Me.langid,Me.systemid,Me.eng_name
               ,Me.status,Me.score,Me.poster_url,Me.score_flower,Me.score_shit,Me.ypk_data_dir,Me.gametypeid
               ,Me.offshelves_reason,Me.video_url,Me.minsdk,Me.online,Me.version_code,Me.storetype,Me.submit_editor_name
               ,Me.gangdian,Me.update_time,Me.gd_logurl,Me.article_id,Me.control_config_info
           FROM 
               game AS Me
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addMeEbo" parameterType="com.morp.model.MeEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                         size,small_logurl,version,classid,langid,systemid,eng_name,
                         status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                         offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                         gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES ( #{bigLogurl},#{descript},#{develop},#{name},#{hotLevel},#{packageName},#{releaseTime},
                 #{size},#{smallLogurl},#{version},#{classid},#{langid},#{systemid},#{engName},
                 #{status},#{score},#{posterUrl},#{scoreFlower},#{scoreShit},#{ypkDataDir},#{gametypeid},
                 #{offshelvesReason},#{videoUrl},#{minsdk},#{online},#{versionCode},#{storetype},#{submitEditorName},
                 #{gangdian},#{updateTime},#{gdLogurl},#{articleId},#{controlConfigInfo})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddMeEbo" parameterType="com.morp.model.MeEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                          size,small_logurl,version,classid,langid,systemid,eng_name,
                          status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                          offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                          gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.bigLogurl},#{item.descript},#{item.develop},#{item.name},#{item.hotLevel},#{item.packageName},#{item.releaseTime},
              #{item.size},#{item.smallLogurl},#{item.version},#{item.classid},#{item.langid},#{item.systemid},#{item.engName},
              #{item.status},#{item.score},#{item.posterUrl},#{item.scoreFlower},#{item.scoreShit},#{item.ypkDataDir},#{item.gametypeid},
              #{item.offshelvesReason},#{item.videoUrl},#{item.minsdk},#{item.online},#{item.versionCode},#{item.storetype},#{item.submitEditorName},
              #{item.gangdian},#{item.updateTime},#{item.gdLogurl},#{item.articleId},#{item.controlConfigInfo} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateMeEbo">
        UPDATE game AS Me
        <set>
          <if test="bigLogurl!= null">Me.big_logurl=#{bigLogurl},</if>
          <if test="descript!= null">Me.descript=#{descript},</if>
          <if test="develop!= null">Me.develop=#{develop},</if>
          <if test="name!= null">Me.name=#{name},</if>
          <if test="hotLevel!= null">Me.hot_level=#{hotLevel},</if>
          <if test="packageName!= null">Me.package_name=#{packageName},</if>
          <if test="releaseTime!= null">Me.release_time=#{releaseTime},</if>
          <if test="size!= null">Me.size=#{size},</if>
          <if test="smallLogurl!= null">Me.small_logurl=#{smallLogurl},</if>
          <if test="version!= null">Me.version=#{version},</if>
          <if test="classid!= null">Me.classid=#{classid},</if>
          <if test="langid!= null">Me.langid=#{langid},</if>
          <if test="systemid!= null">Me.systemid=#{systemid},</if>
          <if test="engName!= null">Me.eng_name=#{engName},</if>
          <if test="status!= null">Me.status=#{status},</if>
          <if test="score!= null">Me.score=#{score},</if>
          <if test="posterUrl!= null">Me.poster_url=#{posterUrl},</if>
          <if test="scoreFlower!= null">Me.score_flower=#{scoreFlower},</if>
          <if test="scoreShit!= null">Me.score_shit=#{scoreShit},</if>
          <if test="ypkDataDir!= null">Me.ypk_data_dir=#{ypkDataDir},</if>
          <if test="gametypeid!= null">Me.gametypeid=#{gametypeid},</if>
          <if test="offshelvesReason!= null">Me.offshelves_reason=#{offshelvesReason},</if>
          <if test="videoUrl!= null">Me.video_url=#{videoUrl},</if>
          <if test="minsdk!= null">Me.minsdk=#{minsdk},</if>
          <if test="online!= null">Me.online=#{online},</if>
          <if test="versionCode!= null">Me.version_code=#{versionCode},</if>
          <if test="storetype!= null">Me.storetype=#{storetype},</if>
          <if test="submitEditorName!= null">Me.submit_editor_name=#{submitEditorName},</if>
          <if test="gangdian!= null">Me.gangdian=#{gangdian},</if>
          <if test="updateTime!= null">Me.update_time=#{updateTime},</if>
          <if test="gdLogurl!= null">Me.gd_logurl=#{gdLogurl},</if>
          <if test="articleId!= null">Me.article_id=#{articleId},</if>
          <if test="controlConfigInfo!= null">Me.control_config_info=#{controlConfigInfo},</if>
        </set>
        WHERE Me.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpMeEbo" parameterType="java.util.List">
        <foreach collection="listMeEbo" item="item" index="index"  separator=";">
            UPDATE game AS Me
            <set>
            <if test="bigLogurl!= null">Me.big_logurl=#{bigLogurl},</if>
            <if test="descript!= null">Me.descript=#{descript},</if>
            <if test="develop!= null">Me.develop=#{develop},</if>
            <if test="name!= null">Me.name=#{name},</if>
            <if test="hotLevel!= null">Me.hot_level=#{hotLevel},</if>
            <if test="packageName!= null">Me.package_name=#{packageName},</if>
            <if test="releaseTime!= null">Me.release_time=#{releaseTime},</if>
            <if test="size!= null">Me.size=#{size},</if>
            <if test="smallLogurl!= null">Me.small_logurl=#{smallLogurl},</if>
            <if test="version!= null">Me.version=#{version},</if>
            <if test="classid!= null">Me.classid=#{classid},</if>
            <if test="langid!= null">Me.langid=#{langid},</if>
            <if test="systemid!= null">Me.systemid=#{systemid},</if>
            <if test="engName!= null">Me.eng_name=#{engName},</if>
            <if test="status!= null">Me.status=#{status},</if>
            <if test="score!= null">Me.score=#{score},</if>
            <if test="posterUrl!= null">Me.poster_url=#{posterUrl},</if>
            <if test="scoreFlower!= null">Me.score_flower=#{scoreFlower},</if>
            <if test="scoreShit!= null">Me.score_shit=#{scoreShit},</if>
            <if test="ypkDataDir!= null">Me.ypk_data_dir=#{ypkDataDir},</if>
            <if test="gametypeid!= null">Me.gametypeid=#{gametypeid},</if>
            <if test="offshelvesReason!= null">Me.offshelves_reason=#{offshelvesReason},</if>
            <if test="videoUrl!= null">Me.video_url=#{videoUrl},</if>
            <if test="minsdk!= null">Me.minsdk=#{minsdk},</if>
            <if test="online!= null">Me.online=#{online},</if>
            <if test="versionCode!= null">Me.version_code=#{versionCode},</if>
            <if test="storetype!= null">Me.storetype=#{storetype},</if>
            <if test="submitEditorName!= null">Me.submit_editor_name=#{submitEditorName},</if>
            <if test="gangdian!= null">Me.gangdian=#{gangdian},</if>
            <if test="updateTime!= null">Me.update_time=#{updateTime},</if>
            <if test="gdLogurl!= null">Me.gd_logurl=#{gdLogurl},</if>
            <if test="articleId!= null">Me.article_id=#{articleId},</if>
            <if test="controlConfigInfo!= null">Me.control_config_info=#{controlConfigInfo},</if>
            </set>
            WHERE Me.id=#{item.Me.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delMeEboById">
        DELETE FROM game
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelMeEboById">
        DELETE FROM game
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM game
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM game AS Me
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listMeEbo" resultMap="MeEboMap">
        SELECT 
                Me.id,Me.big_logurl,Me.descript,Me.develop,Me.name,Me.hot_level,Me.package_name,Me.release_time
               ,Me.size,Me.small_logurl,Me.version,Me.classid,Me.langid,Me.systemid,Me.eng_name
               ,Me.status,Me.score,Me.poster_url,Me.score_flower,Me.score_shit,Me.ypk_data_dir,Me.gametypeid
               ,Me.offshelves_reason,Me.video_url,Me.minsdk,Me.online,Me.version_code,Me.storetype,Me.submit_editor_name
               ,Me.gangdian,Me.update_time,Me.gd_logurl,Me.article_id,Me.control_config_info
         FROM 
                game AS Me
        <where>
            <if test="id!= null">
               AND Me.id = #{id}
            </if>
            <if test="bigLogurl!= null">
               AND Me.big_logurl = #{bigLogurl}
            </if>
            <if test="descript!= null">
               AND Me.descript = #{descript}
            </if>
            <if test="develop!= null">
               AND Me.develop = #{develop}
            </if>
            <if test="name!= null">
               AND Me.name = #{name}
            </if>
            <if test="hotLevel!= null">
               AND Me.hot_level = #{hotLevel}
            </if>
            <if test="packageName!= null">
               AND Me.package_name = #{packageName}
            </if>
            <if test="releaseTime!= null">
               AND Me.release_time = #{releaseTime}
            </if>
            <if test="size!= null">
               AND Me.size = #{size}
            </if>
            <if test="smallLogurl!= null">
               AND Me.small_logurl = #{smallLogurl}
            </if>
            <if test="version!= null">
               AND Me.version = #{version}
            </if>
            <if test="classid!= null">
               AND Me.classid = #{classid}
            </if>
            <if test="langid!= null">
               AND Me.langid = #{langid}
            </if>
            <if test="systemid!= null">
               AND Me.systemid = #{systemid}
            </if>
            <if test="engName!= null">
               AND Me.eng_name = #{engName}
            </if>
            <if test="status!= null">
               AND Me.status = #{status}
            </if>
            <if test="score!= null">
               AND Me.score = #{score}
            </if>
            <if test="posterUrl!= null">
               AND Me.poster_url = #{posterUrl}
            </if>
            <if test="scoreFlower!= null">
               AND Me.score_flower = #{scoreFlower}
            </if>
            <if test="scoreShit!= null">
               AND Me.score_shit = #{scoreShit}
            </if>
            <if test="ypkDataDir!= null">
               AND Me.ypk_data_dir = #{ypkDataDir}
            </if>
            <if test="gametypeid!= null">
               AND Me.gametypeid = #{gametypeid}
            </if>
            <if test="offshelvesReason!= null">
               AND Me.offshelves_reason = #{offshelvesReason}
            </if>
            <if test="videoUrl!= null">
               AND Me.video_url = #{videoUrl}
            </if>
            <if test="minsdk!= null">
               AND Me.minsdk = #{minsdk}
            </if>
            <if test="online!= null">
               AND Me.online = #{online}
            </if>
            <if test="versionCode!= null">
               AND Me.version_code = #{versionCode}
            </if>
            <if test="storetype!= null">
               AND Me.storetype = #{storetype}
            </if>
            <if test="submitEditorName!= null">
               AND Me.submit_editor_name = #{submitEditorName}
            </if>
            <if test="gangdian!= null">
               AND Me.gangdian = #{gangdian}
            </if>
            <if test="updateTime!= null">
               AND Me.update_time = #{updateTime}
            </if>
            <if test="gdLogurl!= null">
               AND Me.gd_logurl = #{gdLogurl}
            </if>
            <if test="articleId!= null">
               AND Me.article_id = #{articleId}
            </if>
            <if test="controlConfigInfo!= null">
               AND Me.control_config_info = #{controlConfigInfo}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:42 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader big_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader descript: 12(VARCHAR), 5120(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader develop: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader hot_level: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader package_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader release_time: 93(TIMESTAMP), 19(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader size: 12(VARCHAR), 10(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader small_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader version: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader classid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader langid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader systemid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader eng_name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader status: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader score: 3(DECIMAL), 3(精确度), 1(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader poster_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader score_flower: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader score_shit: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader ypk_data_dir: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader gametypeid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader offshelves_reason: 12(VARCHAR), 256(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader video_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader minsdk: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader online: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader version_code: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader storetype: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader submit_editor_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader gangdian: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader update_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader gd_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader article_id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:42 DEBUG -com.mg.generator.ConfigLoader control_config_info: -1(VARCHAR), 21845(精确度), 0(小数点后位数)
2018-01-24 13:42 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:42 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class GameEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private String id;
    private String bigLogurl;
    private String descript;
    private String develop;
    private String name;
    private Integer hotLevel;
    private String packageName;
    private java.sql.Timestamp releaseTime;
    private String size;
    private String smallLogurl;
    private String version;
    private String classid;
    private String langid;
    private String systemid;
    private String engName;
    private Integer status;
    private java.math.BigDecimal score;
    private String posterUrl;
    private Integer scoreFlower;
    private Integer scoreShit;
    private String ypkDataDir;
    private String gametypeid;
    private String offshelvesReason;
    private String videoUrl;
    private Integer minsdk;
    private Boolean online;
    private String versionCode;
    private Boolean storetype;
    private String submitEditorName;
    private Boolean gangdian;
    private java.sql.Timestamp updateTime;
    private String gdLogurl;
    private String articleId;
    private String controlConfigInfo;


    public String getId() {
        return id;
   }

    public void setId(String id) {
        this.id = id;
   }

    public String getBigLogurl() {
        return bigLogurl;
   }

    public void setBigLogurl(String bigLogurl) {
        this.bigLogurl = bigLogurl;
   }

    public String getDescript() {
        return descript;
   }

    public void setDescript(String descript) {
        this.descript = descript;
   }

    public String getDevelop() {
        return develop;
   }

    public void setDevelop(String develop) {
        this.develop = develop;
   }

    public String getName() {
        return name;
   }

    public void setName(String name) {
        this.name = name;
   }

    public Integer getHotLevel() {
        return hotLevel;
   }

    public void setHotLevel(Integer hotLevel) {
        this.hotLevel = hotLevel;
   }

    public String getPackageName() {
        return packageName;
   }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
   }

    public java.sql.Timestamp getReleaseTime() {
        return releaseTime;
   }

    public void setReleaseTime(java.sql.Timestamp releaseTime) {
        this.releaseTime = releaseTime;
   }

    public String getSize() {
        return size;
   }

    public void setSize(String size) {
        this.size = size;
   }

    public String getSmallLogurl() {
        return smallLogurl;
   }

    public void setSmallLogurl(String smallLogurl) {
        this.smallLogurl = smallLogurl;
   }

    public String getVersion() {
        return version;
   }

    public void setVersion(String version) {
        this.version = version;
   }

    public String getClassid() {
        return classid;
   }

    public void setClassid(String classid) {
        this.classid = classid;
   }

    public String getLangid() {
        return langid;
   }

    public void setLangid(String langid) {
        this.langid = langid;
   }

    public String getSystemid() {
        return systemid;
   }

    public void setSystemid(String systemid) {
        this.systemid = systemid;
   }

    public String getEngName() {
        return engName;
   }

    public void setEngName(String engName) {
        this.engName = engName;
   }

    public Integer getStatus() {
        return status;
   }

    public void setStatus(Integer status) {
        this.status = status;
   }

    public java.math.BigDecimal getScore() {
        return score;
   }

    public void setScore(java.math.BigDecimal score) {
        this.score = score;
   }

    public String getPosterUrl() {
        return posterUrl;
   }

    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
   }

    public Integer getScoreFlower() {
        return scoreFlower;
   }

    public void setScoreFlower(Integer scoreFlower) {
        this.scoreFlower = scoreFlower;
   }

    public Integer getScoreShit() {
        return scoreShit;
   }

    public void setScoreShit(Integer scoreShit) {
        this.scoreShit = scoreShit;
   }

    public String getYpkDataDir() {
        return ypkDataDir;
   }

    public void setYpkDataDir(String ypkDataDir) {
        this.ypkDataDir = ypkDataDir;
   }

    public String getGametypeid() {
        return gametypeid;
   }

    public void setGametypeid(String gametypeid) {
        this.gametypeid = gametypeid;
   }

    public String getOffshelvesReason() {
        return offshelvesReason;
   }

    public void setOffshelvesReason(String offshelvesReason) {
        this.offshelvesReason = offshelvesReason;
   }

    public String getVideoUrl() {
        return videoUrl;
   }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
   }

    public Integer getMinsdk() {
        return minsdk;
   }

    public void setMinsdk(Integer minsdk) {
        this.minsdk = minsdk;
   }

    public Boolean getOnline() {
        return online;
   }

    public void setOnline(Boolean online) {
        this.online = online;
   }

    public String getVersionCode() {
        return versionCode;
   }

    public void setVersionCode(String versionCode) {
        this.versionCode = versionCode;
   }

    public Boolean getStoretype() {
        return storetype;
   }

    public void setStoretype(Boolean storetype) {
        this.storetype = storetype;
   }

    public String getSubmitEditorName() {
        return submitEditorName;
   }

    public void setSubmitEditorName(String submitEditorName) {
        this.submitEditorName = submitEditorName;
   }

    public Boolean getGangdian() {
        return gangdian;
   }

    public void setGangdian(Boolean gangdian) {
        this.gangdian = gangdian;
   }

    public java.sql.Timestamp getUpdateTime() {
        return updateTime;
   }

    public void setUpdateTime(java.sql.Timestamp updateTime) {
        this.updateTime = updateTime;
   }

    public String getGdLogurl() {
        return gdLogurl;
   }

    public void setGdLogurl(String gdLogurl) {
        this.gdLogurl = gdLogurl;
   }

    public String getArticleId() {
        return articleId;
   }

    public void setArticleId(String articleId) {
        this.articleId = articleId;
   }

    public String getControlConfigInfo() {
        return controlConfigInfo;
   }

    public void setControlConfigInfo(String controlConfigInfo) {
        this.controlConfigInfo = controlConfigInfo;
   }

}


2018-01-24 13:42 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:42 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IGameDao{

}

2018-01-24 13:42 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:42 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IGameDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="GameEboMap" type="com.morp.model.GameEbo" >
        <result property="id" column="id" jdbcType="VARCHAR" javaType="String" >
        <result property="bigLogurl" column="big_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="descript" column="descript" jdbcType="VARCHAR" javaType="String" >
        <result property="develop" column="develop" jdbcType="VARCHAR" javaType="String" >
        <result property="name" column="name" jdbcType="VARCHAR" javaType="String" >
        <result property="hotLevel" column="hot_level" jdbcType="INT" javaType="Integer" >
        <result property="packageName" column="package_name" jdbcType="VARCHAR" javaType="String" >
        <result property="releaseTime" column="release_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" >
        <result property="size" column="size" jdbcType="VARCHAR" javaType="String" >
        <result property="smallLogurl" column="small_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="version" column="version" jdbcType="VARCHAR" javaType="String" >
        <result property="classid" column="classid" jdbcType="VARCHAR" javaType="String" >
        <result property="langid" column="langid" jdbcType="VARCHAR" javaType="String" >
        <result property="systemid" column="systemid" jdbcType="VARCHAR" javaType="String" >
        <result property="engName" column="eng_name" jdbcType="VARCHAR" javaType="String" >
        <result property="status" column="status" jdbcType="INT" javaType="Integer" >
        <result property="score" column="score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" >
        <result property="posterUrl" column="poster_url" jdbcType="VARCHAR" javaType="String" >
        <result property="scoreFlower" column="score_flower" jdbcType="INT" javaType="Integer" >
        <result property="scoreShit" column="score_shit" jdbcType="INT" javaType="Integer" >
        <result property="ypkDataDir" column="ypk_data_dir" jdbcType="VARCHAR" javaType="String" >
        <result property="gametypeid" column="gametypeid" jdbcType="VARCHAR" javaType="String" >
        <result property="offshelvesReason" column="offshelves_reason" jdbcType="VARCHAR" javaType="String" >
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR" javaType="String" >
        <result property="minsdk" column="minsdk" jdbcType="INT" javaType="Integer" >
        <result property="online" column="online" jdbcType="TINYINT" javaType="Boolean" >
        <result property="versionCode" column="version_code" jdbcType="VARCHAR" javaType="String" >
        <result property="storetype" column="storetype" jdbcType="TINYINT" javaType="Boolean" >
        <result property="submitEditorName" column="submit_editor_name" jdbcType="VARCHAR" javaType="String" >
        <result property="gangdian" column="gangdian" jdbcType="TINYINT" javaType="Boolean" >
        <result property="updateTime" column="update_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="gdLogurl" column="gd_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="articleId" column="article_id" jdbcType="VARCHAR" javaType="String" >
        <result property="controlConfigInfo" column="control_config_info" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getGameEbo" >
          SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
           FROM 
               game AS Game
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                         size,small_logurl,version,classid,langid,systemid,eng_name,
                         status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                         offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                         gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES ( #{bigLogurl},#{descript},#{develop},#{name},#{hotLevel},#{packageName},#{releaseTime},
                 #{size},#{smallLogurl},#{version},#{classid},#{langid},#{systemid},#{engName},
                 #{status},#{score},#{posterUrl},#{scoreFlower},#{scoreShit},#{ypkDataDir},#{gametypeid},
                 #{offshelvesReason},#{videoUrl},#{minsdk},#{online},#{versionCode},#{storetype},#{submitEditorName},
                 #{gangdian},#{updateTime},#{gdLogurl},#{articleId},#{controlConfigInfo})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                          size,small_logurl,version,classid,langid,systemid,eng_name,
                          status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                          offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                          gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.bigLogurl},#{item.descript},#{item.develop},#{item.name},#{item.hotLevel},#{item.packageName},#{item.releaseTime},
              #{item.size},#{item.smallLogurl},#{item.version},#{item.classid},#{item.langid},#{item.systemid},#{item.engName},
              #{item.status},#{item.score},#{item.posterUrl},#{item.scoreFlower},#{item.scoreShit},#{item.ypkDataDir},#{item.gametypeid},
              #{item.offshelvesReason},#{item.videoUrl},#{item.minsdk},#{item.online},#{item.versionCode},#{item.storetype},#{item.submitEditorName},
              #{item.gangdian},#{item.updateTime},#{item.gdLogurl},#{item.articleId},#{item.controlConfigInfo} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateGameEbo">
        UPDATE game AS Game
        <set>
          <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
          <if test="descript!= null">Game.descript=#{descript},</if>
          <if test="develop!= null">Game.develop=#{develop},</if>
          <if test="name!= null">Game.name=#{name},</if>
          <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
          <if test="packageName!= null">Game.package_name=#{packageName},</if>
          <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
          <if test="size!= null">Game.size=#{size},</if>
          <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
          <if test="version!= null">Game.version=#{version},</if>
          <if test="classid!= null">Game.classid=#{classid},</if>
          <if test="langid!= null">Game.langid=#{langid},</if>
          <if test="systemid!= null">Game.systemid=#{systemid},</if>
          <if test="engName!= null">Game.eng_name=#{engName},</if>
          <if test="status!= null">Game.status=#{status},</if>
          <if test="score!= null">Game.score=#{score},</if>
          <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
          <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
          <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
          <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
          <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
          <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
          <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
          <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
          <if test="online!= null">Game.online=#{online},</if>
          <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
          <if test="storetype!= null">Game.storetype=#{storetype},</if>
          <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
          <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
          <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
          <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
          <if test="articleId!= null">Game.article_id=#{articleId},</if>
          <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
        </set>
        WHERE Game.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpGameEbo" parameterType="java.util.List">
        <foreach collection="listGameEbo" item="item" index="index"  separator=";">
            UPDATE game AS Game
            <set>
            <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
            <if test="descript!= null">Game.descript=#{descript},</if>
            <if test="develop!= null">Game.develop=#{develop},</if>
            <if test="name!= null">Game.name=#{name},</if>
            <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
            <if test="packageName!= null">Game.package_name=#{packageName},</if>
            <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
            <if test="size!= null">Game.size=#{size},</if>
            <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
            <if test="version!= null">Game.version=#{version},</if>
            <if test="classid!= null">Game.classid=#{classid},</if>
            <if test="langid!= null">Game.langid=#{langid},</if>
            <if test="systemid!= null">Game.systemid=#{systemid},</if>
            <if test="engName!= null">Game.eng_name=#{engName},</if>
            <if test="status!= null">Game.status=#{status},</if>
            <if test="score!= null">Game.score=#{score},</if>
            <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
            <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
            <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
            <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
            <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
            <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
            <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
            <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
            <if test="online!= null">Game.online=#{online},</if>
            <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
            <if test="storetype!= null">Game.storetype=#{storetype},</if>
            <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
            <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
            <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
            <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
            <if test="articleId!= null">Game.article_id=#{articleId},</if>
            <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
            </set>
            WHERE Game.id=#{item.Game.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delGameEboById">
        DELETE FROM game
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelGameEboById">
        DELETE FROM game
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM game
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM game AS Game
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listGameEbo" resultMap="GameEboMap">
        SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
         FROM 
                game AS Game
        <where>
            <if test="id!= null">
               AND Game.id = #{id}
            </if>
            <if test="bigLogurl!= null">
               AND Game.big_logurl = #{bigLogurl}
            </if>
            <if test="descript!= null">
               AND Game.descript = #{descript}
            </if>
            <if test="develop!= null">
               AND Game.develop = #{develop}
            </if>
            <if test="name!= null">
               AND Game.name = #{name}
            </if>
            <if test="hotLevel!= null">
               AND Game.hot_level = #{hotLevel}
            </if>
            <if test="packageName!= null">
               AND Game.package_name = #{packageName}
            </if>
            <if test="releaseTime!= null">
               AND Game.release_time = #{releaseTime}
            </if>
            <if test="size!= null">
               AND Game.size = #{size}
            </if>
            <if test="smallLogurl!= null">
               AND Game.small_logurl = #{smallLogurl}
            </if>
            <if test="version!= null">
               AND Game.version = #{version}
            </if>
            <if test="classid!= null">
               AND Game.classid = #{classid}
            </if>
            <if test="langid!= null">
               AND Game.langid = #{langid}
            </if>
            <if test="systemid!= null">
               AND Game.systemid = #{systemid}
            </if>
            <if test="engName!= null">
               AND Game.eng_name = #{engName}
            </if>
            <if test="status!= null">
               AND Game.status = #{status}
            </if>
            <if test="score!= null">
               AND Game.score = #{score}
            </if>
            <if test="posterUrl!= null">
               AND Game.poster_url = #{posterUrl}
            </if>
            <if test="scoreFlower!= null">
               AND Game.score_flower = #{scoreFlower}
            </if>
            <if test="scoreShit!= null">
               AND Game.score_shit = #{scoreShit}
            </if>
            <if test="ypkDataDir!= null">
               AND Game.ypk_data_dir = #{ypkDataDir}
            </if>
            <if test="gametypeid!= null">
               AND Game.gametypeid = #{gametypeid}
            </if>
            <if test="offshelvesReason!= null">
               AND Game.offshelves_reason = #{offshelvesReason}
            </if>
            <if test="videoUrl!= null">
               AND Game.video_url = #{videoUrl}
            </if>
            <if test="minsdk!= null">
               AND Game.minsdk = #{minsdk}
            </if>
            <if test="online!= null">
               AND Game.online = #{online}
            </if>
            <if test="versionCode!= null">
               AND Game.version_code = #{versionCode}
            </if>
            <if test="storetype!= null">
               AND Game.storetype = #{storetype}
            </if>
            <if test="submitEditorName!= null">
               AND Game.submit_editor_name = #{submitEditorName}
            </if>
            <if test="gangdian!= null">
               AND Game.gangdian = #{gangdian}
            </if>
            <if test="updateTime!= null">
               AND Game.update_time = #{updateTime}
            </if>
            <if test="gdLogurl!= null">
               AND Game.gd_logurl = #{gdLogurl}
            </if>
            <if test="articleId!= null">
               AND Game.article_id = #{articleId}
            </if>
            <if test="controlConfigInfo!= null">
               AND Game.control_config_info = #{controlConfigInfo}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:47 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader big_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader descript: 12(VARCHAR), 5120(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader develop: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader hot_level: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader package_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader release_time: 93(TIMESTAMP), 19(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader size: 12(VARCHAR), 10(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader small_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader version: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader classid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader langid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader systemid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader eng_name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader status: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader score: 3(DECIMAL), 3(精确度), 1(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader poster_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader score_flower: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader score_shit: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader ypk_data_dir: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader gametypeid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader offshelves_reason: 12(VARCHAR), 256(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader video_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader minsdk: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader online: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader version_code: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader storetype: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader submit_editor_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader gangdian: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader update_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader gd_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader article_id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:47 DEBUG -com.mg.generator.ConfigLoader control_config_info: -1(VARCHAR), 21845(精确度), 0(小数点后位数)
2018-01-24 13:47 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:47 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class GameEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private String id;
    private String bigLogurl;
    private String descript;
    private String develop;
    private String name;
    private Integer hotLevel;
    private String packageName;
    private java.sql.Timestamp releaseTime;
    private String size;
    private String smallLogurl;
    private String version;
    private String classid;
    private String langid;
    private String systemid;
    private String engName;
    private Integer status;
    private java.math.BigDecimal score;
    private String posterUrl;
    private Integer scoreFlower;
    private Integer scoreShit;
    private String ypkDataDir;
    private String gametypeid;
    private String offshelvesReason;
    private String videoUrl;
    private Integer minsdk;
    private Boolean online;
    private String versionCode;
    private Boolean storetype;
    private String submitEditorName;
    private Boolean gangdian;
    private java.sql.Timestamp updateTime;
    private String gdLogurl;
    private String articleId;
    private String controlConfigInfo;


    public String getId() {
        return id;
   }

    public void setId(String id) {
        this.id = id;
   }

    public String getBigLogurl() {
        return bigLogurl;
   }

    public void setBigLogurl(String bigLogurl) {
        this.bigLogurl = bigLogurl;
   }

    public String getDescript() {
        return descript;
   }

    public void setDescript(String descript) {
        this.descript = descript;
   }

    public String getDevelop() {
        return develop;
   }

    public void setDevelop(String develop) {
        this.develop = develop;
   }

    public String getName() {
        return name;
   }

    public void setName(String name) {
        this.name = name;
   }

    public Integer getHotLevel() {
        return hotLevel;
   }

    public void setHotLevel(Integer hotLevel) {
        this.hotLevel = hotLevel;
   }

    public String getPackageName() {
        return packageName;
   }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
   }

    public java.sql.Timestamp getReleaseTime() {
        return releaseTime;
   }

    public void setReleaseTime(java.sql.Timestamp releaseTime) {
        this.releaseTime = releaseTime;
   }

    public String getSize() {
        return size;
   }

    public void setSize(String size) {
        this.size = size;
   }

    public String getSmallLogurl() {
        return smallLogurl;
   }

    public void setSmallLogurl(String smallLogurl) {
        this.smallLogurl = smallLogurl;
   }

    public String getVersion() {
        return version;
   }

    public void setVersion(String version) {
        this.version = version;
   }

    public String getClassid() {
        return classid;
   }

    public void setClassid(String classid) {
        this.classid = classid;
   }

    public String getLangid() {
        return langid;
   }

    public void setLangid(String langid) {
        this.langid = langid;
   }

    public String getSystemid() {
        return systemid;
   }

    public void setSystemid(String systemid) {
        this.systemid = systemid;
   }

    public String getEngName() {
        return engName;
   }

    public void setEngName(String engName) {
        this.engName = engName;
   }

    public Integer getStatus() {
        return status;
   }

    public void setStatus(Integer status) {
        this.status = status;
   }

    public java.math.BigDecimal getScore() {
        return score;
   }

    public void setScore(java.math.BigDecimal score) {
        this.score = score;
   }

    public String getPosterUrl() {
        return posterUrl;
   }

    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
   }

    public Integer getScoreFlower() {
        return scoreFlower;
   }

    public void setScoreFlower(Integer scoreFlower) {
        this.scoreFlower = scoreFlower;
   }

    public Integer getScoreShit() {
        return scoreShit;
   }

    public void setScoreShit(Integer scoreShit) {
        this.scoreShit = scoreShit;
   }

    public String getYpkDataDir() {
        return ypkDataDir;
   }

    public void setYpkDataDir(String ypkDataDir) {
        this.ypkDataDir = ypkDataDir;
   }

    public String getGametypeid() {
        return gametypeid;
   }

    public void setGametypeid(String gametypeid) {
        this.gametypeid = gametypeid;
   }

    public String getOffshelvesReason() {
        return offshelvesReason;
   }

    public void setOffshelvesReason(String offshelvesReason) {
        this.offshelvesReason = offshelvesReason;
   }

    public String getVideoUrl() {
        return videoUrl;
   }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
   }

    public Integer getMinsdk() {
        return minsdk;
   }

    public void setMinsdk(Integer minsdk) {
        this.minsdk = minsdk;
   }

    public Boolean getOnline() {
        return online;
   }

    public void setOnline(Boolean online) {
        this.online = online;
   }

    public String getVersionCode() {
        return versionCode;
   }

    public void setVersionCode(String versionCode) {
        this.versionCode = versionCode;
   }

    public Boolean getStoretype() {
        return storetype;
   }

    public void setStoretype(Boolean storetype) {
        this.storetype = storetype;
   }

    public String getSubmitEditorName() {
        return submitEditorName;
   }

    public void setSubmitEditorName(String submitEditorName) {
        this.submitEditorName = submitEditorName;
   }

    public Boolean getGangdian() {
        return gangdian;
   }

    public void setGangdian(Boolean gangdian) {
        this.gangdian = gangdian;
   }

    public java.sql.Timestamp getUpdateTime() {
        return updateTime;
   }

    public void setUpdateTime(java.sql.Timestamp updateTime) {
        this.updateTime = updateTime;
   }

    public String getGdLogurl() {
        return gdLogurl;
   }

    public void setGdLogurl(String gdLogurl) {
        this.gdLogurl = gdLogurl;
   }

    public String getArticleId() {
        return articleId;
   }

    public void setArticleId(String articleId) {
        this.articleId = articleId;
   }

    public String getControlConfigInfo() {
        return controlConfigInfo;
   }

    public void setControlConfigInfo(String controlConfigInfo) {
        this.controlConfigInfo = controlConfigInfo;
   }

}


2018-01-24 13:47 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:47 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IGameDao{

}

2018-01-24 13:47 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:47 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IGameDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="GameEboMap" type="com.morp.model.GameEbo" >
        <result property="id" column="id" jdbcType="VARCHAR" javaType="String" >
        <result property="bigLogurl" column="big_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="descript" column="descript" jdbcType="VARCHAR" javaType="String" >
        <result property="develop" column="develop" jdbcType="VARCHAR" javaType="String" >
        <result property="name" column="name" jdbcType="VARCHAR" javaType="String" >
        <result property="hotLevel" column="hot_level" jdbcType="INT" javaType="Integer" >
        <result property="packageName" column="package_name" jdbcType="VARCHAR" javaType="String" >
        <result property="releaseTime" column="release_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" >
        <result property="size" column="size" jdbcType="VARCHAR" javaType="String" >
        <result property="smallLogurl" column="small_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="version" column="version" jdbcType="VARCHAR" javaType="String" >
        <result property="classid" column="classid" jdbcType="VARCHAR" javaType="String" >
        <result property="langid" column="langid" jdbcType="VARCHAR" javaType="String" >
        <result property="systemid" column="systemid" jdbcType="VARCHAR" javaType="String" >
        <result property="engName" column="eng_name" jdbcType="VARCHAR" javaType="String" >
        <result property="status" column="status" jdbcType="INT" javaType="Integer" >
        <result property="score" column="score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" >
        <result property="posterUrl" column="poster_url" jdbcType="VARCHAR" javaType="String" >
        <result property="scoreFlower" column="score_flower" jdbcType="INT" javaType="Integer" >
        <result property="scoreShit" column="score_shit" jdbcType="INT" javaType="Integer" >
        <result property="ypkDataDir" column="ypk_data_dir" jdbcType="VARCHAR" javaType="String" >
        <result property="gametypeid" column="gametypeid" jdbcType="VARCHAR" javaType="String" >
        <result property="offshelvesReason" column="offshelves_reason" jdbcType="VARCHAR" javaType="String" >
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR" javaType="String" >
        <result property="minsdk" column="minsdk" jdbcType="INT" javaType="Integer" >
        <result property="online" column="online" jdbcType="TINYINT" javaType="Boolean" >
        <result property="versionCode" column="version_code" jdbcType="VARCHAR" javaType="String" >
        <result property="storetype" column="storetype" jdbcType="TINYINT" javaType="Boolean" >
        <result property="submitEditorName" column="submit_editor_name" jdbcType="VARCHAR" javaType="String" >
        <result property="gangdian" column="gangdian" jdbcType="TINYINT" javaType="Boolean" >
        <result property="updateTime" column="update_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="gdLogurl" column="gd_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="articleId" column="article_id" jdbcType="VARCHAR" javaType="String" >
        <result property="controlConfigInfo" column="control_config_info" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getGameEbo" >
          SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
           FROM 
               game AS Game
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( id,big_logurl,descript,develop,name,hot_level,package_name,
                         release_time,size,small_logurl,version,classid,langid,systemid,
                         eng_name,status,score,poster_url,score_flower,score_shit,ypk_data_dir,
                         gametypeid,offshelves_reason,video_url,minsdk,online,version_code,storetype,
                         submit_editor_name,gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES ( #{id},#{bigLogurl},#{descript},#{develop},#{name},#{hotLevel},#{packageName},
                 #{releaseTime},#{size},#{smallLogurl},#{version},#{classid},#{langid},#{systemid},
                 #{engName},#{status},#{score},#{posterUrl},#{scoreFlower},#{scoreShit},#{ypkDataDir},
                 #{gametypeid},#{offshelvesReason},#{videoUrl},#{minsdk},#{online},#{versionCode},#{storetype},
                 #{submitEditorName},#{gangdian},#{updateTime},#{gdLogurl},#{articleId},#{controlConfigInfo})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( id,big_logurl,descript,develop,name,hot_level,package_name,
                          release_time,size,small_logurl,version,classid,langid,systemid,
                          eng_name,status,score,poster_url,score_flower,score_shit,ypk_data_dir,
                          gametypeid,offshelves_reason,video_url,minsdk,online,version_code,storetype,
                          submit_editor_name,gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.bigLogurl},#{item.descript},#{item.develop},#{item.name},#{item.hotLevel},#{item.packageName},
              #{item.releaseTime},#{item.size},#{item.smallLogurl},#{item.version},#{item.classid},#{item.langid},#{item.systemid},
              #{item.engName},#{item.status},#{item.score},#{item.posterUrl},#{item.scoreFlower},#{item.scoreShit},#{item.ypkDataDir},
              #{item.gametypeid},#{item.offshelvesReason},#{item.videoUrl},#{item.minsdk},#{item.online},#{item.versionCode},#{item.storetype},
              #{item.submitEditorName},#{item.gangdian},#{item.updateTime},#{item.gdLogurl},#{item.articleId},#{item.controlConfigInfo} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateGameEbo">
        UPDATE game AS Game
        <set>
          <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
          <if test="descript!= null">Game.descript=#{descript},</if>
          <if test="develop!= null">Game.develop=#{develop},</if>
          <if test="name!= null">Game.name=#{name},</if>
          <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
          <if test="packageName!= null">Game.package_name=#{packageName},</if>
          <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
          <if test="size!= null">Game.size=#{size},</if>
          <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
          <if test="version!= null">Game.version=#{version},</if>
          <if test="classid!= null">Game.classid=#{classid},</if>
          <if test="langid!= null">Game.langid=#{langid},</if>
          <if test="systemid!= null">Game.systemid=#{systemid},</if>
          <if test="engName!= null">Game.eng_name=#{engName},</if>
          <if test="status!= null">Game.status=#{status},</if>
          <if test="score!= null">Game.score=#{score},</if>
          <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
          <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
          <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
          <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
          <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
          <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
          <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
          <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
          <if test="online!= null">Game.online=#{online},</if>
          <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
          <if test="storetype!= null">Game.storetype=#{storetype},</if>
          <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
          <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
          <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
          <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
          <if test="articleId!= null">Game.article_id=#{articleId},</if>
          <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
        </set>
        WHERE Game.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpGameEbo" parameterType="java.util.List">
        <foreach collection="listGameEbo" item="item" index="index"  separator=";">
            UPDATE game AS Game
            <set>
            <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
            <if test="descript!= null">Game.descript=#{descript},</if>
            <if test="develop!= null">Game.develop=#{develop},</if>
            <if test="name!= null">Game.name=#{name},</if>
            <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
            <if test="packageName!= null">Game.package_name=#{packageName},</if>
            <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
            <if test="size!= null">Game.size=#{size},</if>
            <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
            <if test="version!= null">Game.version=#{version},</if>
            <if test="classid!= null">Game.classid=#{classid},</if>
            <if test="langid!= null">Game.langid=#{langid},</if>
            <if test="systemid!= null">Game.systemid=#{systemid},</if>
            <if test="engName!= null">Game.eng_name=#{engName},</if>
            <if test="status!= null">Game.status=#{status},</if>
            <if test="score!= null">Game.score=#{score},</if>
            <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
            <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
            <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
            <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
            <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
            <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
            <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
            <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
            <if test="online!= null">Game.online=#{online},</if>
            <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
            <if test="storetype!= null">Game.storetype=#{storetype},</if>
            <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
            <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
            <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
            <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
            <if test="articleId!= null">Game.article_id=#{articleId},</if>
            <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
            </set>
            WHERE Game.id=#{item.Game.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delGameEboById">
        DELETE FROM game
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelGameEboById">
        DELETE FROM game
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM game
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM game AS Game
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listGameEbo" resultMap="GameEboMap">
        SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
         FROM 
                game AS Game
        <where>
            <if test="id!= null">
               AND Game.id = #{id}
            </if>
            <if test="bigLogurl!= null">
               AND Game.big_logurl = #{bigLogurl}
            </if>
            <if test="descript!= null">
               AND Game.descript = #{descript}
            </if>
            <if test="develop!= null">
               AND Game.develop = #{develop}
            </if>
            <if test="name!= null">
               AND Game.name = #{name}
            </if>
            <if test="hotLevel!= null">
               AND Game.hot_level = #{hotLevel}
            </if>
            <if test="packageName!= null">
               AND Game.package_name = #{packageName}
            </if>
            <if test="releaseTime!= null">
               AND Game.release_time = #{releaseTime}
            </if>
            <if test="size!= null">
               AND Game.size = #{size}
            </if>
            <if test="smallLogurl!= null">
               AND Game.small_logurl = #{smallLogurl}
            </if>
            <if test="version!= null">
               AND Game.version = #{version}
            </if>
            <if test="classid!= null">
               AND Game.classid = #{classid}
            </if>
            <if test="langid!= null">
               AND Game.langid = #{langid}
            </if>
            <if test="systemid!= null">
               AND Game.systemid = #{systemid}
            </if>
            <if test="engName!= null">
               AND Game.eng_name = #{engName}
            </if>
            <if test="status!= null">
               AND Game.status = #{status}
            </if>
            <if test="score!= null">
               AND Game.score = #{score}
            </if>
            <if test="posterUrl!= null">
               AND Game.poster_url = #{posterUrl}
            </if>
            <if test="scoreFlower!= null">
               AND Game.score_flower = #{scoreFlower}
            </if>
            <if test="scoreShit!= null">
               AND Game.score_shit = #{scoreShit}
            </if>
            <if test="ypkDataDir!= null">
               AND Game.ypk_data_dir = #{ypkDataDir}
            </if>
            <if test="gametypeid!= null">
               AND Game.gametypeid = #{gametypeid}
            </if>
            <if test="offshelvesReason!= null">
               AND Game.offshelves_reason = #{offshelvesReason}
            </if>
            <if test="videoUrl!= null">
               AND Game.video_url = #{videoUrl}
            </if>
            <if test="minsdk!= null">
               AND Game.minsdk = #{minsdk}
            </if>
            <if test="online!= null">
               AND Game.online = #{online}
            </if>
            <if test="versionCode!= null">
               AND Game.version_code = #{versionCode}
            </if>
            <if test="storetype!= null">
               AND Game.storetype = #{storetype}
            </if>
            <if test="submitEditorName!= null">
               AND Game.submit_editor_name = #{submitEditorName}
            </if>
            <if test="gangdian!= null">
               AND Game.gangdian = #{gangdian}
            </if>
            <if test="updateTime!= null">
               AND Game.update_time = #{updateTime}
            </if>
            <if test="gdLogurl!= null">
               AND Game.gd_logurl = #{gdLogurl}
            </if>
            <if test="articleId!= null">
               AND Game.article_id = #{articleId}
            </if>
            <if test="controlConfigInfo!= null">
               AND Game.control_config_info = #{controlConfigInfo}
            </if>
        </where>
    </select>

</mapper>

2018-01-24 13:48 INFO -com.mg.generator.ConfigLoader Load {} successful! mybatis-generator.xml
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader big_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader descript: 12(VARCHAR), 5120(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader develop: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader hot_level: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader package_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader release_time: 93(TIMESTAMP), 19(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader size: 12(VARCHAR), 10(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader small_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader version: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader classid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader langid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader systemid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader eng_name: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader status: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader score: 3(DECIMAL), 3(精确度), 1(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader poster_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader score_flower: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader score_shit: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader ypk_data_dir: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader gametypeid: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader offshelves_reason: 12(VARCHAR), 256(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader video_url: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader minsdk: 4(INT), 11(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader online: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader version_code: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader storetype: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader submit_editor_name: 12(VARCHAR), 100(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader gangdian: -7(TINYINT), 1(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader update_time: 93(DATETIME), 19(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader gd_logurl: 12(VARCHAR), 255(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader article_id: 12(VARCHAR), 50(精确度), 0(小数点后位数)
2018-01-24 13:48 DEBUG -com.mg.generator.ConfigLoader control_config_info: -1(VARCHAR), 21845(精确度), 0(小数点后位数)
2018-01-24 13:48 INFO -com.mg.generator.DBResource 实体类构造开始执行
2018-01-24 13:48 INFO -com.mg.generator.ConfigLoader 实体类生成成功package com.morp.model; 

import java.io.Serializable; 

public class GameEbo implements Serializable{

    private static final long serialVersionUID = 1L;

    private String id;
    private String bigLogurl;
    private String descript;
    private String develop;
    private String name;
    private Integer hotLevel;
    private String packageName;
    private java.sql.Timestamp releaseTime;
    private String size;
    private String smallLogurl;
    private String version;
    private String classid;
    private String langid;
    private String systemid;
    private String engName;
    private Integer status;
    private java.math.BigDecimal score;
    private String posterUrl;
    private Integer scoreFlower;
    private Integer scoreShit;
    private String ypkDataDir;
    private String gametypeid;
    private String offshelvesReason;
    private String videoUrl;
    private Integer minsdk;
    private Boolean online;
    private String versionCode;
    private Boolean storetype;
    private String submitEditorName;
    private Boolean gangdian;
    private java.sql.Timestamp updateTime;
    private String gdLogurl;
    private String articleId;
    private String controlConfigInfo;


    public String getId() {
        return id;
   }

    public void setId(String id) {
        this.id = id;
   }

    public String getBigLogurl() {
        return bigLogurl;
   }

    public void setBigLogurl(String bigLogurl) {
        this.bigLogurl = bigLogurl;
   }

    public String getDescript() {
        return descript;
   }

    public void setDescript(String descript) {
        this.descript = descript;
   }

    public String getDevelop() {
        return develop;
   }

    public void setDevelop(String develop) {
        this.develop = develop;
   }

    public String getName() {
        return name;
   }

    public void setName(String name) {
        this.name = name;
   }

    public Integer getHotLevel() {
        return hotLevel;
   }

    public void setHotLevel(Integer hotLevel) {
        this.hotLevel = hotLevel;
   }

    public String getPackageName() {
        return packageName;
   }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
   }

    public java.sql.Timestamp getReleaseTime() {
        return releaseTime;
   }

    public void setReleaseTime(java.sql.Timestamp releaseTime) {
        this.releaseTime = releaseTime;
   }

    public String getSize() {
        return size;
   }

    public void setSize(String size) {
        this.size = size;
   }

    public String getSmallLogurl() {
        return smallLogurl;
   }

    public void setSmallLogurl(String smallLogurl) {
        this.smallLogurl = smallLogurl;
   }

    public String getVersion() {
        return version;
   }

    public void setVersion(String version) {
        this.version = version;
   }

    public String getClassid() {
        return classid;
   }

    public void setClassid(String classid) {
        this.classid = classid;
   }

    public String getLangid() {
        return langid;
   }

    public void setLangid(String langid) {
        this.langid = langid;
   }

    public String getSystemid() {
        return systemid;
   }

    public void setSystemid(String systemid) {
        this.systemid = systemid;
   }

    public String getEngName() {
        return engName;
   }

    public void setEngName(String engName) {
        this.engName = engName;
   }

    public Integer getStatus() {
        return status;
   }

    public void setStatus(Integer status) {
        this.status = status;
   }

    public java.math.BigDecimal getScore() {
        return score;
   }

    public void setScore(java.math.BigDecimal score) {
        this.score = score;
   }

    public String getPosterUrl() {
        return posterUrl;
   }

    public void setPosterUrl(String posterUrl) {
        this.posterUrl = posterUrl;
   }

    public Integer getScoreFlower() {
        return scoreFlower;
   }

    public void setScoreFlower(Integer scoreFlower) {
        this.scoreFlower = scoreFlower;
   }

    public Integer getScoreShit() {
        return scoreShit;
   }

    public void setScoreShit(Integer scoreShit) {
        this.scoreShit = scoreShit;
   }

    public String getYpkDataDir() {
        return ypkDataDir;
   }

    public void setYpkDataDir(String ypkDataDir) {
        this.ypkDataDir = ypkDataDir;
   }

    public String getGametypeid() {
        return gametypeid;
   }

    public void setGametypeid(String gametypeid) {
        this.gametypeid = gametypeid;
   }

    public String getOffshelvesReason() {
        return offshelvesReason;
   }

    public void setOffshelvesReason(String offshelvesReason) {
        this.offshelvesReason = offshelvesReason;
   }

    public String getVideoUrl() {
        return videoUrl;
   }

    public void setVideoUrl(String videoUrl) {
        this.videoUrl = videoUrl;
   }

    public Integer getMinsdk() {
        return minsdk;
   }

    public void setMinsdk(Integer minsdk) {
        this.minsdk = minsdk;
   }

    public Boolean getOnline() {
        return online;
   }

    public void setOnline(Boolean online) {
        this.online = online;
   }

    public String getVersionCode() {
        return versionCode;
   }

    public void setVersionCode(String versionCode) {
        this.versionCode = versionCode;
   }

    public Boolean getStoretype() {
        return storetype;
   }

    public void setStoretype(Boolean storetype) {
        this.storetype = storetype;
   }

    public String getSubmitEditorName() {
        return submitEditorName;
   }

    public void setSubmitEditorName(String submitEditorName) {
        this.submitEditorName = submitEditorName;
   }

    public Boolean getGangdian() {
        return gangdian;
   }

    public void setGangdian(Boolean gangdian) {
        this.gangdian = gangdian;
   }

    public java.sql.Timestamp getUpdateTime() {
        return updateTime;
   }

    public void setUpdateTime(java.sql.Timestamp updateTime) {
        this.updateTime = updateTime;
   }

    public String getGdLogurl() {
        return gdLogurl;
   }

    public void setGdLogurl(String gdLogurl) {
        this.gdLogurl = gdLogurl;
   }

    public String getArticleId() {
        return articleId;
   }

    public void setArticleId(String articleId) {
        this.articleId = articleId;
   }

    public String getControlConfigInfo() {
        return controlConfigInfo;
   }

    public void setControlConfigInfo(String controlConfigInfo) {
        this.controlConfigInfo = controlConfigInfo;
   }

}


2018-01-24 13:48 INFO -com.mg.generator.DBResource dao层接口构造开始执行
2018-01-24 13:48 INFO -com.mg.generator.ConfigLoader DAO层接口生成成功：package com.morp.dao; 

public interface IGameDao{

}

2018-01-24 13:48 INFO -com.mg.generator.DBResource mapper映射文件构造开始执行
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.DBResource Databases connection successful
2018-01-24 13:48 INFO -com.mg.generator.ConfigLoader mybatis映射文件生成成功：<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.morp.dao.IGameDao">

    <!-- ============================= resultMap ============================= -->
    <resultMap id="GameEboMap" type="com.morp.model.GameEbo" >
        <result property="id" column="id" jdbcType="VARCHAR" javaType="String" >
        <result property="bigLogurl" column="big_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="descript" column="descript" jdbcType="VARCHAR" javaType="String" >
        <result property="develop" column="develop" jdbcType="VARCHAR" javaType="String" >
        <result property="name" column="name" jdbcType="VARCHAR" javaType="String" >
        <result property="hotLevel" column="hot_level" jdbcType="INT" javaType="Integer" >
        <result property="packageName" column="package_name" jdbcType="VARCHAR" javaType="String" >
        <result property="releaseTime" column="release_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" >
        <result property="size" column="size" jdbcType="VARCHAR" javaType="String" >
        <result property="smallLogurl" column="small_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="version" column="version" jdbcType="VARCHAR" javaType="String" >
        <result property="classid" column="classid" jdbcType="VARCHAR" javaType="String" >
        <result property="langid" column="langid" jdbcType="VARCHAR" javaType="String" >
        <result property="systemid" column="systemid" jdbcType="VARCHAR" javaType="String" >
        <result property="engName" column="eng_name" jdbcType="VARCHAR" javaType="String" >
        <result property="status" column="status" jdbcType="INT" javaType="Integer" >
        <result property="score" column="score" jdbcType="DECIMAL" javaType="java.math.BigDecimal" >
        <result property="posterUrl" column="poster_url" jdbcType="VARCHAR" javaType="String" >
        <result property="scoreFlower" column="score_flower" jdbcType="INT" javaType="Integer" >
        <result property="scoreShit" column="score_shit" jdbcType="INT" javaType="Integer" >
        <result property="ypkDataDir" column="ypk_data_dir" jdbcType="VARCHAR" javaType="String" >
        <result property="gametypeid" column="gametypeid" jdbcType="VARCHAR" javaType="String" >
        <result property="offshelvesReason" column="offshelves_reason" jdbcType="VARCHAR" javaType="String" >
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR" javaType="String" >
        <result property="minsdk" column="minsdk" jdbcType="INT" javaType="Integer" >
        <result property="online" column="online" jdbcType="TINYINT" javaType="Boolean" >
        <result property="versionCode" column="version_code" jdbcType="VARCHAR" javaType="String" >
        <result property="storetype" column="storetype" jdbcType="TINYINT" javaType="Boolean" >
        <result property="submitEditorName" column="submit_editor_name" jdbcType="VARCHAR" javaType="String" >
        <result property="gangdian" column="gangdian" jdbcType="TINYINT" javaType="Boolean" >
        <result property="updateTime" column="update_time" jdbcType="DATETIME" javaType="java.sql.Timestamp" >
        <result property="gdLogurl" column="gd_logurl" jdbcType="VARCHAR" javaType="String" >
        <result property="articleId" column="article_id" jdbcType="VARCHAR" javaType="String" >
        <result property="controlConfigInfo" column="control_config_info" jdbcType="VARCHAR" javaType="String" >
    </resultMap> 

    <!-- ============================= COMMON SQL ============================= -->
    <sql id="getGameEbo" >
          SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
           FROM 
               game AS Game
    </sql>


    <!-- ============================= INSERT ============================= -->
    <insert id="addGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                         size,small_logurl,version,classid,langid,systemid,eng_name,
                         status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                         offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                         gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES ( #{bigLogurl},#{descript},#{develop},#{name},#{hotLevel},#{packageName},#{releaseTime},
                 #{size},#{smallLogurl},#{version},#{classid},#{langid},#{systemid},#{engName},
                 #{status},#{score},#{posterUrl},#{scoreFlower},#{scoreShit},#{ypkDataDir},#{gametypeid},
                 #{offshelvesReason},#{videoUrl},#{minsdk},#{online},#{versionCode},#{storetype},#{submitEditorName},
                 #{gangdian},#{updateTime},#{gdLogurl},#{articleId},#{controlConfigInfo})
    </insert>


    <!-- ============================= BACTH INSTER ============================= -->
    <insert id="bacthAddGameEbo" parameterType="com.morp.model.GameEbo" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO game( big_logurl,descript,develop,name,hot_level,package_name,release_time,
                          size,small_logurl,version,classid,langid,systemid,eng_name,
                          status,score,poster_url,score_flower,score_shit,ypk_data_dir,gametypeid,
                          offshelves_reason,video_url,minsdk,online,version_code,storetype,submit_editor_name,
                          gangdian,update_time,gd_logurl,article_id,control_config_info )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.bigLogurl},#{item.descript},#{item.develop},#{item.name},#{item.hotLevel},#{item.packageName},#{item.releaseTime},
              #{item.size},#{item.smallLogurl},#{item.version},#{item.classid},#{item.langid},#{item.systemid},#{item.engName},
              #{item.status},#{item.score},#{item.posterUrl},#{item.scoreFlower},#{item.scoreShit},#{item.ypkDataDir},#{item.gametypeid},
              #{item.offshelvesReason},#{item.videoUrl},#{item.minsdk},#{item.online},#{item.versionCode},#{item.storetype},#{item.submitEditorName},
              #{item.gangdian},#{item.updateTime},#{item.gdLogurl},#{item.articleId},#{item.controlConfigInfo} )
        </foreach>
    </insert>


    <!-- ============================= UPDATE ============================= -->
    <update id="updateGameEbo">
        UPDATE game AS Game
        <set>
          <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
          <if test="descript!= null">Game.descript=#{descript},</if>
          <if test="develop!= null">Game.develop=#{develop},</if>
          <if test="name!= null">Game.name=#{name},</if>
          <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
          <if test="packageName!= null">Game.package_name=#{packageName},</if>
          <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
          <if test="size!= null">Game.size=#{size},</if>
          <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
          <if test="version!= null">Game.version=#{version},</if>
          <if test="classid!= null">Game.classid=#{classid},</if>
          <if test="langid!= null">Game.langid=#{langid},</if>
          <if test="systemid!= null">Game.systemid=#{systemid},</if>
          <if test="engName!= null">Game.eng_name=#{engName},</if>
          <if test="status!= null">Game.status=#{status},</if>
          <if test="score!= null">Game.score=#{score},</if>
          <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
          <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
          <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
          <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
          <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
          <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
          <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
          <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
          <if test="online!= null">Game.online=#{online},</if>
          <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
          <if test="storetype!= null">Game.storetype=#{storetype},</if>
          <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
          <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
          <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
          <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
          <if test="articleId!= null">Game.article_id=#{articleId},</if>
          <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
        </set>
        WHERE Game.id=#{id} 
    </update>


    <!-- ============================= BATCH UPDATE ============================= -->
    <update id="bachtUpGameEbo" parameterType="java.util.List">
        <foreach collection="listGameEbo" item="item" index="index"  separator=";">
            UPDATE game AS Game
            <set>
            <if test="bigLogurl!= null">Game.big_logurl=#{bigLogurl},</if>
            <if test="descript!= null">Game.descript=#{descript},</if>
            <if test="develop!= null">Game.develop=#{develop},</if>
            <if test="name!= null">Game.name=#{name},</if>
            <if test="hotLevel!= null">Game.hot_level=#{hotLevel},</if>
            <if test="packageName!= null">Game.package_name=#{packageName},</if>
            <if test="releaseTime!= null">Game.release_time=#{releaseTime},</if>
            <if test="size!= null">Game.size=#{size},</if>
            <if test="smallLogurl!= null">Game.small_logurl=#{smallLogurl},</if>
            <if test="version!= null">Game.version=#{version},</if>
            <if test="classid!= null">Game.classid=#{classid},</if>
            <if test="langid!= null">Game.langid=#{langid},</if>
            <if test="systemid!= null">Game.systemid=#{systemid},</if>
            <if test="engName!= null">Game.eng_name=#{engName},</if>
            <if test="status!= null">Game.status=#{status},</if>
            <if test="score!= null">Game.score=#{score},</if>
            <if test="posterUrl!= null">Game.poster_url=#{posterUrl},</if>
            <if test="scoreFlower!= null">Game.score_flower=#{scoreFlower},</if>
            <if test="scoreShit!= null">Game.score_shit=#{scoreShit},</if>
            <if test="ypkDataDir!= null">Game.ypk_data_dir=#{ypkDataDir},</if>
            <if test="gametypeid!= null">Game.gametypeid=#{gametypeid},</if>
            <if test="offshelvesReason!= null">Game.offshelves_reason=#{offshelvesReason},</if>
            <if test="videoUrl!= null">Game.video_url=#{videoUrl},</if>
            <if test="minsdk!= null">Game.minsdk=#{minsdk},</if>
            <if test="online!= null">Game.online=#{online},</if>
            <if test="versionCode!= null">Game.version_code=#{versionCode},</if>
            <if test="storetype!= null">Game.storetype=#{storetype},</if>
            <if test="submitEditorName!= null">Game.submit_editor_name=#{submitEditorName},</if>
            <if test="gangdian!= null">Game.gangdian=#{gangdian},</if>
            <if test="updateTime!= null">Game.update_time=#{updateTime},</if>
            <if test="gdLogurl!= null">Game.gd_logurl=#{gdLogurl},</if>
            <if test="articleId!= null">Game.article_id=#{articleId},</if>
            <if test="controlConfigInfo!= null">Game.control_config_info=#{controlConfigInfo},</if>
            </set>
            WHERE Game.id=#{item.Game.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delGameEboById">
        DELETE FROM game
        WHERE id=#{id} 
    </delete>


    <!-- ============================= BABCH DELETE ============================= -->
    <delete id="bacthDelGameEboById">
        DELETE FROM game
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>


    <!-- ============================= DELETE ALL ============================= -->
    <delete id="delAll">
        DELETE FROM game
    </delete>


    <!-- ============================= SELECT COUNT============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*) FROM game AS Game
    </select>


    <!-- ============================= SELECT ============================= -->
    <select id="listGameEbo" resultMap="GameEboMap">
        SELECT 
                Game.id,Game.big_logurl,Game.descript,Game.develop,Game.name,Game.hot_level,Game.package_name,Game.release_time
               ,Game.size,Game.small_logurl,Game.version,Game.classid,Game.langid,Game.systemid,Game.eng_name
               ,Game.status,Game.score,Game.poster_url,Game.score_flower,Game.score_shit,Game.ypk_data_dir,Game.gametypeid
               ,Game.offshelves_reason,Game.video_url,Game.minsdk,Game.online,Game.version_code,Game.storetype,Game.submit_editor_name
               ,Game.gangdian,Game.update_time,Game.gd_logurl,Game.article_id,Game.control_config_info
         FROM 
                game AS Game
        <where>
            <if test="id!= null">
               AND Game.id = #{id}
            </if>
            <if test="bigLogurl!= null">
               AND Game.big_logurl = #{bigLogurl}
            </if>
            <if test="descript!= null">
               AND Game.descript = #{descript}
            </if>
            <if test="develop!= null">
               AND Game.develop = #{develop}
            </if>
            <if test="name!= null">
               AND Game.name = #{name}
            </if>
            <if test="hotLevel!= null">
               AND Game.hot_level = #{hotLevel}
            </if>
            <if test="packageName!= null">
               AND Game.package_name = #{packageName}
            </if>
            <if test="releaseTime!= null">
               AND Game.release_time = #{releaseTime}
            </if>
            <if test="size!= null">
               AND Game.size = #{size}
            </if>
            <if test="smallLogurl!= null">
               AND Game.small_logurl = #{smallLogurl}
            </if>
            <if test="version!= null">
               AND Game.version = #{version}
            </if>
            <if test="classid!= null">
               AND Game.classid = #{classid}
            </if>
            <if test="langid!= null">
               AND Game.langid = #{langid}
            </if>
            <if test="systemid!= null">
               AND Game.systemid = #{systemid}
            </if>
            <if test="engName!= null">
               AND Game.eng_name = #{engName}
            </if>
            <if test="status!= null">
               AND Game.status = #{status}
            </if>
            <if test="score!= null">
               AND Game.score = #{score}
            </if>
            <if test="posterUrl!= null">
               AND Game.poster_url = #{posterUrl}
            </if>
            <if test="scoreFlower!= null">
               AND Game.score_flower = #{scoreFlower}
            </if>
            <if test="scoreShit!= null">
               AND Game.score_shit = #{scoreShit}
            </if>
            <if test="ypkDataDir!= null">
               AND Game.ypk_data_dir = #{ypkDataDir}
            </if>
            <if test="gametypeid!= null">
               AND Game.gametypeid = #{gametypeid}
            </if>
            <if test="offshelvesReason!= null">
               AND Game.offshelves_reason = #{offshelvesReason}
            </if>
            <if test="videoUrl!= null">
               AND Game.video_url = #{videoUrl}
            </if>
            <if test="minsdk!= null">
               AND Game.minsdk = #{minsdk}
            </if>
            <if test="online!= null">
               AND Game.online = #{online}
            </if>
            <if test="versionCode!= null">
               AND Game.version_code = #{versionCode}
            </if>
            <if test="storetype!= null">
               AND Game.storetype = #{storetype}
            </if>
            <if test="submitEditorName!= null">
               AND Game.submit_editor_name = #{submitEditorName}
            </if>
            <if test="gangdian!= null">
               AND Game.gangdian = #{gangdian}
            </if>
            <if test="updateTime!= null">
               AND Game.update_time = #{updateTime}
            </if>
            <if test="gdLogurl!= null">
               AND Game.gd_logurl = #{gdLogurl}
            </if>
            <if test="articleId!= null">
               AND Game.article_id = #{articleId}
            </if>
            <if test="controlConfigInfo!= null">
               AND Game.control_config_info = #{controlConfigInfo}
            </if>
        </where>
    </select>

</mapper>

